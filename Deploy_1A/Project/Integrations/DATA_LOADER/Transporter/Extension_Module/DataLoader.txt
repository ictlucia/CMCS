#
# FIS exported extension module.
# source  
# timestamp (utc) 
# ***** DO NOT EDIT! *****
#
name        "DataLoader"
description "DataLoader 5.0.6 Copyright 2009-2014 FIS"

groups {
}

decls[FMenuExtension] {
}

clx CInsDefAppFrame [FMenuExtension] {
  DataLoader =
  CreateFunction=FDLProfile.CreateDataLoaderMenuItem
  DisplayName=DataLoader
  MenuType=Application
  ParentMenu=Tools
  ShortcutKey=L


  Show Provider Data =
  CreateFunction=FDLProfile.CreateShowProviderDataMenuItem
  DisplayName=Show Provider Data
  MenuType=Application
  ParentMenu=Tools


  Unlink ExternalObject =
  CreateFunction=FDLProfile.CreateUnlinkExternalObjectMenuItem
  DisplayName=Unlink ExternalObject
  MenuType=Application
  ParentMenu=Tools


}

clx FExternalObject [FMenuExtension] {
  ShowData =
  CreateFunction=FDLProfile.ShowData
  MenuType=Object


}

clx FFrame [FMenuExtension] {
  DataLoader =
  CreateFunction=FDLProfile.CreateDataLoaderMenuItem
  DisplayName=DataLoader
  MenuType=Application
  ParentMenu=Tools
  ShortcutKey=L


  Show Provider Data =
  CreateFunction=FDLProfile.CreateShowProviderDataMenuItem
  DisplayName=Show Provider Data
  MenuType=Application
  ParentMenu=Tools


}


clx FReconciliationDocument [FMenuExtension] {
  ShowData =
  CreateFunction=FDLProfile.ShowData
  MenuType=Object


}

clx FSessionManagerFrame [FMenuExtension] {
  DataLoader =
  CreateFunction=FDLProfile.CreateDataLoaderMenuItem
  DisplayName=DataLoader
  MenuType=Application
  ParentMenu=Data
  ShortcutKey=L


}


decls[FCustomApplicationDefinition] {
}

clx FObject [FCustomApplicationDefinition] {
  DataLoader =
  CreationFunction=FDLRibbonGUI.GetDataLoaderApplicationObject
  Name=DataLoader
  ObjectTypes=
  ProfileComponent=


}

decls[FCommandExtension] {
}

decls[FCommandExtension] {
  "DataLoader" ( "active commands" ) "";
  "DataLoader.About DataLoader" ( "active commands" ) "";
  "DataLoader.Bloomberg" ( "active commands" ) "";
  "DataLoader.Category.Home" ( "active commands" ) "";
  "DataLoader.Category.Home.Panel.About" ( "active commands" ) "";
  "DataLoader.Category.Home.Panel.Action" ( "active commands" ) "";
  "DataLoader.Category.Home.Panel.Load" ( "active commands" ) "";
  "DataLoader.Category.Home.Panel.Source" ( "active commands" ) "";
  "DataLoader.Category.Home.Panel.Source.MenuButton.Mode" ( "active commands" ) "";
  "DataLoader.Category.Home.Panel.Source.MenuButton.Provider" ( "active commands" ) "";
  "DataLoader.Category.Logging" ( "active commands" ) "";
  "DataLoader.Category.Logging.Panel.Log Level" ( "active commands" ) "";
  "DataLoader.Category.Logging.Panel.Log Level.MenuButton.Log File Level" ( "active commands" ) "";
  "DataLoader.Category.Logging.Panel.Log Level.MenuButton.Notification Level" ( "active commands" ) "";
  "DataLoader.Category.Logging.Panel.Notification Media" ( "active commands" ) "";
  "DataLoader.Category.Open.Panel.Application" ( "active commands" ) "";
  "DataLoader.Category.Tools" ( "active commands" ) "";
  "DataLoader.Global" ( "active commands" ) "";
  "DataLoader.Go" ( "active commands" ) "";
  "DataLoader.Insert Items" ( "active commands" ) "";
  "DataLoader.Load Benchmark Data" ( "active commands" ) "";
  "DataLoader.Load Calendar Data" ( "active commands" ) "";
  "DataLoader.Load Corporate Actions" ( "active commands" ) "";
  "DataLoader.Load Custom Load" ( "active commands" ) "";
  "DataLoader.Load Dividend" ( "active commands" ) "";
  "DataLoader.Load Future Data" ( "active commands" ) "";
  "DataLoader.Load Instrument" ( "active commands" ) "";
  "DataLoader.Load Mifid Data" ( "active commands" ) "";
  "DataLoader.Load Option Data" ( "active commands" ) "";
  "DataLoader.Load Prices" ( "active commands" ) "";
  "DataLoader.Load Ratings" ( "active commands" ) "";
  "DataLoader.Load Volatility Surface" ( "active commands" ) "";
  "DataLoader.Load Yield Curve" ( "active commands" ) "";
  "DataLoader.Log Level DEBUG" ( "active commands" ) "";
  "DataLoader.Log Level ERROR" ( "active commands" ) "";
  "DataLoader.Log Level INFO" ( "active commands" ) "";
  "DataLoader.Log Level WARNING" ( "active commands" ) "";
  "DataLoader.MAIL" ( "active commands" ) "";
  "DataLoader.MarketMap" ( "active commands" ) "";
  "DataLoader.MESSAGE" ( "active commands" ) "";
  "DataLoader.Mode Download File" ( "active commands" ) "";
  "DataLoader.Mode Downloaded File" ( "active commands" ) "";
  "DataLoader.Mode InputFile" ( "active commands" ) "";
  "DataLoader.Mode QueryFolder" ( "active commands" ) "";
  "DataLoader.Mode SecurityID" ( "active commands" ) "";
  "DataLoader.Mode Select Instrument" ( "active commands" ) "";
  "DataLoader.Notification Level DEBUG" ( "active commands" ) "";
  "DataLoader.Notification Level ERROR" ( "active commands" ) "";
  "DataLoader.Notification Level SUCCESS" ( "active commands" ) "";
  "DataLoader.Notification Level TRACK" ( "active commands" ) "";
  "DataLoader.Notification Level WARNING" ( "active commands" ) "";
  "DataLoader.OpenInstrument" ( "active commands" ) "";
  "DataLoader.Price Entry" ( "active commands" ) "";
  "DataLoader.PriceLinkSpecification" ( "active commands" ) "";
  "DataLoader.PRIME_LOG" ( "active commands" ) "";
  "DataLoader.PRIME_LOG_TRANSIENT" ( "active commands" ) "";
  "DataLoader.Refinitiv" ( "active commands" ) "";
}

clx FUxLayoutApplicationFrame [FCommandExtension] {
  Calculation API Demo =
  RibbonLabel=Calculation API Demo


  cmdDockedPanesMenu =
  RibbonLabel=Panes


  Custom Control Dialog... =
  RibbonLabel=Custom Control Dialog...


  Custom Layout Dialog with Data Binding... =
  RibbonLabel=Custom Layout Dialog with Data Binding...


  Custom Layout Dialog... =
  RibbonLabel=Custom Layout Dialog...


  Custom Layout Tabbed Dialog... =
  RibbonLabel=Custom Layout Tabbed Dialog...


  Custom List And Tree Control Dialog... =
  RibbonLabel=Custom List And Tree Control Dialog...


  DataLoader =
  RibbonLabel=DataLoader


  DataLoader.About DataLoader =
  icon=About
  LargeIcon=Yes
  RibbonLabel=About Dataloader
  ShowLabel=No


  DataLoader.Bloomberg =
  RibbonLabel=Bloomberg


  DataLoader.Category.Home =
  ChildOrder=DataLoader.Category.Home.Panel.Action;DataLoader.Category.Home.Panel.Source;DataLoader.Category.Home.Panel.Load;DataLoader.Category.Home.Panel.About
  RibbonLabel=Home
  SubType=DataLoader
  Type=Category


  DataLoader.Category.Home.Panel.About =
  Category=DataLoader.Category.Home
  ChildOrder=DataLoader.About DataLoader
  RibbonLabel=About
  SubType=DataLoader
  Type=Panel


  DataLoader.Category.Home.Panel.Action =
  Category=DataLoader.Category.Home
  ChildOrder=DataLoader.Go
  RibbonLabel=Action
  SubType=DataLoader
  Type=Panel


  DataLoader.Category.Home.Panel.Load =
  Category=DataLoader.Category.Home
  ChildOrder=DataLoader.Load Instrument;DataLoader.Load Prices;DataLoader.Load Dividend;DataLoader.Load Corporate Actions;DataLoader.Load Ratings;DataLoader.Load Custom Load;DataLoader.Load Volatility Surface;DataLoader.Load Yield Curve;DataLoader.Load Benchmark Data;DataLoader.Load Option Data;DataLoader.Load Future Data;DataLoader.Load Mifid Data;DataLoader.Load Calendar Data
  RibbonLabel=Load
  SubType=DataLoader
  Type=Panel


  DataLoader.Category.Home.Panel.Source =
  Category=DataLoader.Category.Home
  ChildOrder=DataLoader.Category.Home.Panel.Source.MenuButton.Mode;Separator;DataLoader.Category.Home.Panel.Source.MenuButton.Provider
  RibbonLabel=Source
  SubType=DataLoader
  Type=Panel


  DataLoader.Category.Home.Panel.Source.MenuButton.Mode =
  Category=DataLoader.Category.Home
  ChildOrder=DataLoader.Mode SecurityID;DataLoader.Mode InputFile;DataLoader.Mode QueryFolder;DataLoader.Mode Select Instrument;DataLoader.Mode Downloaded File
  icon=InsertItems
  LargeIcon=Yes
  Panel=DataLoader.Category.Home.Panel.Source
  RibbonLabel=Mode
  SubType=DataLoader
  Type=MenuButton


  DataLoader.Category.Home.Panel.Source.MenuButton.Provider =
  Category=DataLoader.Category.Home
  ChildOrder=DataLoader.Bloomberg;DataLoader.MarketMap;DataLoader.Refinitiv
  icon=Information
  LargeIcon=Yes
  Panel=DataLoader.Category.Home.Panel.Source
  RibbonLabel=Provider
  SubType=DataLoader
  Type=MenuButton


  DataLoader.Category.Logging =
  ChildOrder=DataLoader.Category.Logging.Panel.Notification Media;DataLoader.Category.Logging.Panel.Log Level
  RibbonLabel=Logging
  SubType=DataLoader
  Type=Category


  DataLoader.Category.Logging.Panel.Log Level =
  Category=DataLoader.Category.Logging
  ChildOrder=DataLoader.Category.Logging.Panel.Log Level.MenuButton.Notification Level;DataLoader.Category.Logging.Panel.Log Level.MenuButton.Log File Level
  RibbonLabel=Log Level
  SubType=DataLoader
  Type=Panel


  DataLoader.Category.Logging.Panel.Log Level.MenuButton.Log File Level =
  Category=DataLoader.Category.Logging
  ChildOrder=DataLoader.Log Level DEBUG;DataLoader.Log Level INFO;DataLoader.Log Level WARNING;DataLoader.Log Level ERROR
  icon=DockedYieldCurve
  LargeIcon=Yes
  Panel=DataLoader.Category.Logging.Panel.Log Level
  RibbonLabel=Log File Level
  SubType=DataLoader
  Type=MenuButton


  DataLoader.Category.Logging.Panel.Log Level.MenuButton.Notification Level =
  Category=DataLoader.Category.Logging
  ChildOrder=DataLoader.Notification Level DEBUG;DataLoader.Notification Level TRACK;DataLoader.Notification Level SUCCESS;DataLoader.Notification Level WARNING;DataLoader.Notification Level ERROR
  icon=DockedOrderEntry
  LargeIcon=Yes
  Panel=DataLoader.Category.Logging.Panel.Log Level
  RibbonLabel=Notification Level
  SubType=DataLoader
  Type=MenuButton


  DataLoader.Category.Logging.Panel.Notification Media =
  Category=DataLoader.Category.Logging
  ChildOrder=DataLoader.MAIL;DataLoader.MESSAGE;DataLoader.PRIME_LOG;DataLoader.PRIME_LOG_TRANSIENT
  icon=DockedCalculator
  RibbonLabel=Notification Media
  SubType=DataLoader
  Type=Panel


  DataLoader.Category.Open.Panel.Application =
  Category=DataLoader.Category.Tools
  ChildOrder=DataLoader.OpenInstrument;Separator;DataLoader.Price Entry;Separator;DataLoader.Insert Items
  RibbonLabel=Application
  SubType=DataLoader
  Type=Panel


  DataLoader.Category.Tools =
  ChildOrder=DataLoader.Category.Open.Panel.Application
  RibbonLabel=Tools
  SubType=DataLoader
  Type=Category


  DataLoader.Global =
  ChildOrder=DataLoader.Category.Home;DataLoader.Category.Logging;DataLoader.Category.Tools
  SubType=DataLoader
  Type=Ribbon


  DataLoader.Go =
  icon=Play
  LargeIcon=Yes
  RibbonLabel=Go


  DataLoader.Insert Items =
  icon=InsertItems
  LargeIcon=Yes
  RibbonLabel=Insert Items Window


  DataLoader.Load Benchmark Data =
  icon=MoveCurve
  LargeIcon=No
  RibbonLabel=Benchmark Data


  DataLoader.Load Calendar Data =
  icon=FCalendar
  LargeIcon=No
  RibbonLabel=Calendar Data


  DataLoader.Load Corporate Actions =
  icon=ImportCashflow
  LargeIcon=No
  RibbonLabel=Corporate Actions


  DataLoader.Load Custom Load =
  icon=Settings
  LargeIcon=No
  RibbonLabel=Custom Load


  DataLoader.Load Dividend =
  icon=FDividend
  LargeIcon=No
  RibbonLabel=Dividend


  DataLoader.Load Future Data =
  icon=Simulate
  RibbonLabel=Future Chain


  DataLoader.Load Instrument =
  icon=InstrumentBkg
  LargeIcon=Yes
  RibbonLabel=Instrument

  DataLoader.Load MIFID Data =
  icon=Agent
  RibbonLabel=MIFID Data


  DataLoader.Load Mifid Data =
  icon=DataIncrement


  DataLoader.Load Option Data =
  icon=Agent
  RibbonLabel=Option Chain


  DataLoader.Load Prices =
  icon=ReleasePayments
  RibbonLabel=Prices


  DataLoader.Load Ratings =
  icon=PayValue
  LargeIcon=No
  RibbonLabel=Ratings


  DataLoader.Load Volatility Surface =
  icon=VolatilityManager
  LargeIcon=No
  RibbonLabel=Volatility Surface


  DataLoader.Load Yield Curve =
  icon=YieldCurveCalculation
  LargeIcon=No
  RibbonLabel=Yield Curve


  DataLoader.Log Level DEBUG =
  RibbonLabel=DEBUG


  DataLoader.Log Level ERROR =
  RibbonLabel=ERROR


  DataLoader.Log Level INFO =
  RibbonLabel=INFO


  DataLoader.Log Level WARNING =
  RibbonLabel=WARNING


  DataLoader.MAIL =
  icon=ConfirmationSheet
  LargeIcon=Yes
  RibbonLabel=MAIL


  DataLoader.MarketMap =
  RibbonLabel=MarketMap


  DataLoader.MESSAGE =
  icon=SendMessage
  LargeIcon=Yes
  RibbonLabel=MESSAGE


  DataLoader.Mode Download File =
  RibbonLabel=Download File


  DataLoader.Mode Downloaded File =
  RibbonLabel=Downloaded File


  DataLoader.Mode InputFile =
  RibbonLabel=Input File


  DataLoader.Mode QueryFolder =
  RibbonLabel=Query Folder


  DataLoader.Mode SecurityID =
  RibbonLabel=SecurityID


  DataLoader.Mode Select Instrument =
  RibbonLabel=Select Instrument


  DataLoader.Notification Level DEBUG =
  RibbonLabel=DEBUG


  DataLoader.Notification Level ERROR =
  RibbonLabel=ERROR


  DataLoader.Notification Level SUCCESS =
  RibbonLabel=SUCCESS


  DataLoader.Notification Level TRACK =
  RibbonLabel=TRACK


  DataLoader.Notification Level WARNING =
  RibbonLabel=WARNING


  DataLoader.OpenInstrument =
  icon=InstrumentBkg
  LargeIcon=Yes
  RibbonLabel=Instrument


  DataLoader.Price Entry =
  icon=PriceEntry
  LargeIcon=Yes
  RibbonLabel=Price Entry


  DataLoader.PriceLinkSpecification =
  icon=PriceLinkDef
  LargeIcon=Yes
  RibbonLabel=PriceLinkSpecification Window


  DataLoader.PRIME_LOG =
  icon=Details
  LargeIcon=Yes
  RibbonLabel=PRIME LOG


  DataLoader.PRIME_LOG_TRANSIENT =
  icon=DetailsBase
  LargeIcon=Yes
  RibbonLabel=PRIME LOG TRANSIENT


  DataLoader.Refinitiv =
  RibbonLabel=Refinitiv


  fileSaveAll =
  RibbonLabel=Save All


  helpContext =
  RibbonLabel=Help


  Insert Items++ =
  RibbonLabel=Insert Items++


  Net Control Dialog... =
  RibbonLabel=Net Control Dialog...


  Separator =
  icon=VerticalDirection
  RibbonLabel=Separator


  Show Sheet Information... =
  RibbonLabel=Show Sheet Information...


}

decls[FCustomMethod] {
}

clx FInstrument [FCustomMethod] {
  GetProviderDataFieldValue =
  Definition=GetProviderDataFieldValue(FString data_field, FString data_provider=''):FString
  Function=FDLBusinessProcess.get_provider_data_field_value


}



decls[FColumnDefinition] {
  "CorpActExDate" ( "sheet columns.orderbooksheet" "sheet columns.ordersheet" "sheet columns.portfoliosheet" "sheet columns.tradesheet" ) "";
  "CorpActFreeText" ( "sheet columns.orderbooksheet" "sheet columns.ordersheet" "sheet columns.portfoliosheet" "sheet columns.tradesheet" ) "";
  "CorpActName" ( "sheet columns.orderbooksheet" "sheet columns.ordersheet" "sheet columns.portfoliosheet" "sheet columns.tradesheet" ) "";
  "CorpActType" ( "sheet columns.orderbooksheet" "sheet columns.ordersheet" "sheet columns.portfoliosheet" "sheet columns.tradesheet" ) "";
  "DL Instrument Name" ( "sheet columns.businessprocesssheet" ) "";
  "DL Instrument Type" ( "sheet columns.businessprocesssheet" ) "";
}

clx FTradingSheet [FColumnDefinition] {
  CorpActExDate =
  Access=ReadOnly
  Class=Instrument
  Description=Displays the ExDate of next upcoming corporate action
  ExtensionAttribute=nextCorpActionExDate
  GroupLabel=Upcoming Corporate Action


  CorpActFreeText =
  Access=ReadOnly
  Class=Instrument
  Description=Displays the free text of next upcoming corporate action
  ExtensionAttribute=nextCorpActionText
  GroupLabel=Upcoming Corporate Action


  CorpActName =
  Access=ReadOnly
  Class=Instrument
  Description=Displays the name of next upcoming corporate action
  ExtensionAttribute=nextCorpActionName
  GroupLabel=Upcoming Corporate Action


  CorpActType =
  Access=ReadOnly
  Class=Instrument
  Description=Displays the type of next upcoming corporate action
  ExtensionAttribute=nextCorpActionType
  GroupLabel=Upcoming Corporate Action

  DL Instrument Name =
  ExtensionAttribute=dlInstrumentName
  GroupLabel=Business Process
  Name=Instrument Name


  DL Instrument Type =
  ExtensionAttribute=dlInstrumentType
  GroupLabel=Business Process
  Name=Instrument Type


}

decls[FCustomFunction] {
}

clx FObject [FCustomFunction] {
  get_corporate_actions =
  Definition=get_corporate_actions(FInstrument ins) : FPersistentSet
  Function=FDLADSOperations.get_corporate_actions


  get_corp_action_exdate =
  Definition=get_corp_action_exdate(FCorporateAction corpact) : string
  Function=FDLADSOperations. get_corp_action_exdate


  get_corp_action_name =
  Definition=get_corp_action_name(FCorporateAction corpact) : string
  Function=FDLADSOperations. get_corp_action_name


  get_corp_action_text =
  Definition=get_corp_action_text(FCorporateAction corpact) : string
  Function=FDLADSOperations. get_corp_action_text


  get_corp_action_type =
  Definition=get_corp_action_type(FCorporateAction corpact) : string
  Function=FDLADSOperations. get_corp_action_type


  get_next_corporate_action =
  Definition=get_next_corporate_action(FPersistentSet ca_set) : FCorporateAction
  Function=FDLADSOperations. get_next_corporate_action

  get_instrument_name_from_business_process =
  Definition=get_instrument_name_from_business_process(FBusinessProcess business_process) : string
  Function=FDLBusinessProcess.get_instrument_name_from_business_process


  get_instrument_type_from_business_process =
  Definition=get_instrument_type_from_business_process(FBusinessProcess business_process) : string
  Function=FDLBusinessProcess.get_instrument_type_from_business_process


}

decls[FExtensionAttribute] {  
  "nextCorpActionExDate" ( "sheet columns.tradesheet" ) "";
  "nextCorpActionName" ( "sheet columns.tradesheet" ) "";
  "nextCorpActionText" ( "sheet columns.tradesheet" ) "";
  "nextCorpActionType" ( "sheet columns.tradesheet" ) "";

}

clx FInstrument [FExtensionAttribute] {
  nextCorpActionExDate = get_corp_action_exdate(get_next_corporate_action(get_corporate_actions(object)));
  nextCorpActionName = get_corp_action_name(get_next_corporate_action(get_corporate_actions(object)));
  nextCorpActionText = get_corp_action_text(get_next_corporate_action(get_corporate_actions(object)));
  nextCorpActionType = get_corp_action_type(get_next_corporate_action(get_corporate_actions(object)));
  
  }

clx FBusinessProcess [FExtensionAttribute] {
  dlInstrumentName = get_instrument_name_from_business_process(object);
  dlInstrumentType = get_instrument_type_from_business_process(object);

}decls[FParameters] {
}

clx FObject [FParameters] {
  FAutolinkInstrumentFields =
  instrument_fields_to_map={'Incomplete' : 'Incomplete', 'Category' : 'CategoryChlItem',  'ContractSize' : 'ContractSize',  'DayCountMethod' : 'DayCountMethod', 'ExCouponMethod' : 'ExCouponMethod', 'ExCouponPeriodCount': 'ExCouponPeriodCount', 'ExCouponPeriodUnit' : 'ExCouponPeriodUnit', 'ExerciseType' : 'ExerciseType', 'ExoticType' : 'ExoticType', 'FreeText':'FreeText', 'MtmFromFeed' : 'MtmFromFeed', 'NoticePeriodCount' : 'NoticePeriodCount', 'NoticePeriodUnit' : 'NoticePeriodUnit', 'Notional' : 'Notional', 'OpenEnd' : 'OpenEnd', 'OTC' : 'Otc', 'PayType' : 'PayType', 'PriceDiffLimitRel' : 'PriceDiffLimitRel', 'PriceFindingGroup' : 'PriceFindingChlItem', 'Product Type' : 'ProductTypeChlItem', 'Quotation' : 'Quotation', 'S&P' : 'Rating1ChlItem', 'Moodys' : 'Rating3ChlItem', 'OurRate' : 'Rating2ChlItem', 'RoundingSpec' : 'RoundingSpecification', 'Settle Category' : 'SettleCategoryChlItem', 'SettlementCalendar' : 'SettlementCalendar', 'Seniority' : 'SeniorityChlItem', 'ShortSell' : 'ShortSell', 'SpotBankingDaysOffset' : 'SpotBankingDaysOffset', 'StrikeQuotation':'StrikeQuotation', 'ValGroup' : 'ValuationGrpChlItem', 'YTMMethod' : 'YTMMethod'}

  FAutolinkSettings =
  PRECEDENCE_DICTIONARY={1 : ['NonGenFUTCshFlow', 'NonGenFutFwd', 'NonGenFutFwdFRA_IMM', 'NonGenFutFwd_FXSwapFixedEndDay']}

  FDLBusinessProcessSettings =
  ACCEPT_INCOMPLETE_FA_INSTYPE_ex=['ALL']
  AUTO_AUTHORIZE_FA_INSTYPE_ex=['ALL']
  ENABLE_BUSINESS_PROCESS_ex=False

  FDLConfigAMBSettings =
  AMBA_SENDER_MB_NAME=AMBA_SENDER
  AMBA_SENDER_SOURCE_ex=AMBA
  DATALOADER_NOTIFICATION_SOURCE_ex=NOTIFICATION
  DATALOADER_REQUEST_SOURCE=DataLoaderRequest
  DATALOADER_SOURCE_ex=DataLoader
  MESSAGE_BROKER_ex=
  MESSAGE_GROUP=ADL
  NOTIFY_GROUP_ex=
  #Refer FCA 4503 for assigning value to parameters=


  FDLConfigGUISettings =
  ARCHIVE=True
  BUILD_NUMBER=00.1.1055
  FROM_DATE=Today
  IDENTIFIER=ISIN
  INSTRUMENT_SUB_TYPE_ex=
  INSTRUMENT_TYPE_ex=Default
  LOAD_ex=Instrument   # choose Instrument, Latest Prices, FX Prices, Historical Prices
  MODE_SELECTION=SecurityID  # choose SecurityID, Query Folder, Input File, Downloaded File for type of upload
  PRODUCT_VERSION_ex=5.0.6
  PROVIDER_ex=Bloomberg
  TO_DATE=Today
  #Please remove the comment of parameter after choosing the provided values=
  #Refer FCA 4503 for assigning value to parameters=


  FDLConfigLogSettings =
  NOTIFICATION_MEDIA_ex=PRIME_LOG  # choose  MAIL, MESSAGE, PRIME_LOG, PRIME_LOG_TRANSIENT, OFF
  NOTIFY_LEVEL_ex=SUCCESS  # choose DEBUG, TRACK, SUCCESS, WARNING, ERROR
  SMTP_SERVER_ex=
  USER_EMAIL_ex=
  VERBOSITY_LEVEL_ex=1
  #1: info + error + warning 2: info + error + warning+ debug  3: error + warning 4: error(+ traceback)=
  #Please remove the comment of parameter after choosing the provided values=
  #Refer FCA 4503 for assigning value to parameters=


  FDLConfigOpenFigiSettings =
  OPENFIGI_API_KEY=<OpenFIGI Api key>
  OPENFIGI_API_URL=https://api.openfigi.com/v2/mapping


}

decls[FPythonCode] {
}

clx FObject [FPythonCode] {
  FAutolink
"""----------------------------------------------------------------------------
MODULE
    FAutolink - Maintainance of database entities

DESCRIPTION
    Automatic handling and maintainance of yield curve, volatility
    surfaces, instrument pages and Mapping instrument fields to
    Instruments in database.

ENDDESCRIPTION
----------------------------------------------------------------------------"""

import ael
import acm
import FLogger
import os
import os.path
import string
default_rules = 'Select Rules'
FASQL_Query = 30

#===============================================================================
# Main classes to handle mapping logic
#===============================================================================

#------------------------------------------------------------------------------
# Base classes
#------------------------------------------------------------------------------

class absRules:
    '''Base class for rule handling. Not to
       be instanciated.
       Inherited by YCRules, VolSurfaceRules etc.
    '''
    def checkRules(self,commit=0):
        '''Go through all rules, checking for insertion/removal
           of instruments from structures.'''
        logger.DLOG('In checkrules()')
        for rule in self.rules:
            logger.LOG("Processing rule <%s>" % rule.Name())
            struct = self.structures[self.ruleToStructName(rule.Name())]
            structInsNames = struct.getInstrumentNames()
            ruleInsNames = []
            qry = rule.Query()
            results = qry.Select()
            for ins in results:
                ruleInsNames.append(ins.Name())

            if ruleInsNames:
                logStr = \
                listToTableString("Unprocessed query instruments",
                                  ruleInsNames)
                logger.DLOG(logStr)

            removedNames, ruleInsNames = self.handle_acm_expiry(ruleInsNames)
            removedNames, addedNames, ruleInsNames = self.handle_explicit_rules(rule, ruleInsNames)

            # insertion pass

            addedNames = []
            if self.globalParams.get('InsName'):
                insName = self.globalParams['InsName']
                if not insName in structInsNames:
                    struct.insertInstrument(insName,commit)
                    addedNames.append(insName)
            else:
                yc=acm.FYieldCurve[struct.name]
                if yc and yc.IsPutCallParityCurve():
                    for insName in ruleInsNames:
                        ins=acm.FOption[insName]
                        for insName2 in ruleInsNames:                        
                            ins2=acm.FOption[insName2]
                            if ins.IsPutCallParityPairable(ins2):
                                ruleInsNames.remove(insName)
                                ruleInsNames.remove(insName2)
                                if ins.IsCallOption():
                                    yc.AddPutCallParityPairBenchmark(ins,ins2)
                                    addedNames.append(insName)
                                else:
                                    yc.AddPutCallParityPairBenchmark(ins2,ins)
                                    addedNames.append(insName)  
                else:    
                    for insName in ruleInsNames:
                        if not insName in structInsNames:
                            struct.insertInstrument(insName,commit)
                            addedNames.append(insName)

            # removal pass
            for insName in structInsNames:
                if not insName in ruleInsNames:
                    struct.removeInstrument(insName,commit)
                    removedNames.append(insName)
            if addedNames:
                logStr = listToTableString("Inserted instruments into <%s>" \
                                               % struct.name, addedNames)
                logger.LOG(logStr)
            if removedNames:
                logStr = listToTableString("Removed instruments from <%s>" \
                                               % struct.name, removedNames)
                logger.LOG(logStr)

    def handle_acm_expiry(self, ruleInsNames):
        # handle ACM expiry
        removedNames = None
        #ruleInsNames = None
        if globalParams["excludeACMExired"]:
            logger.LOG("Exluding ACM expired instruments")
            oldRuleInsNames = ruleInsNames
            ruleInsNames = [insName for insName in ruleInsNames \
                                if not isACMExpired(insName)]
            removedNames = [ins for ins in oldRuleInsNames \
                                if ins not in ruleInsNames]
            if removedNames:
                logStr = \
                listToTableString("Excluded ACM expired instruments",
                                      removedNames)
                logger.DLOG(logStr)
        return removedNames, ruleInsNames

    def handle_explicit_rules(self, rule, ruleInsNames):
        # handle explicit rules
        if explicitRuleMappingTable:
            if rule.Name() in list(explicitRuleMappingTable.keys()):
                logger.LOG('Filter by explicit rule %s' % rule.Name())
                oldRuleInsNames = ruleInsNames
                try:
                    ruleInsNamesTemp = \
                        explicitRuleMappingTable[rule.Name()](ruleInsNames)
                    ruleInsNames = ruleInsNamesTemp
                except:
                    logger.ELOG('Error executing explicit rule %s' \
                                         % rule.Name)
                removedNames = [ins for ins in oldRuleInsNames \
                                    if ins not in ruleInsNames]
                addedNames = [ins for ins in ruleInsNames \
                                    if ins not in oldRuleInsNames]
                if removedNames:
                        logStr = \
                        listToTableString("Explicitly removed instruments",
                                          removedNames)
                        logger.DLOG(logStr)

                if addedNames:
                        logStr = \
                        listToTableString("Explicitly added instruments",
                                          addedNames)
                        logger.DLOG(logStr)
                return (removedNames, addedNames, ruleInsNames)
            else:
                return ([], [], ruleInsNames)
        else:
            return ([], [], ruleInsNames)

    def getStructures(self):
        '''Retrieves structure associated with the rules.
           Abstract method, must be implemented in the derived class.'''
        raise NotImplementedError('Abstract method, please override in derived class')

    def getRules(self):
        '''Extracts all query rules from the database.'''
        logger.DLOG('In getRules()')
        tmpRules = None

        textObjects = ael.TextObject.select('type=%s' %FASQL_Query)
        if textObjects:
            tmpRules = textObjects.members()

        if tmpRules == []:
            logger.LOG('Found no rules')
        for rule in tmpRules:
            acm_query = acm.FStoredASQLQuery[rule.name]
            if acm_query:
                self.rules.append(acm.FStoredASQLQuery[rule.name])
                self.ruleNames.append(rule.name)
        if self.ruleNames:
            logStr = \
            listToTableString("Query rules found",self.ruleNames)
            logger.LOG(logStr)

    def ruleToStructName(self,ruleName):
        """
        Extracts the struct name from the rule name.
        """
        escapes = {"__":"/"}
        # remove rule prefix
        name = ruleName.replace(self.nameStandard+'-','')
        for esc in list(escapes.keys()):
            name = name.replace(esc,escapes[esc])
        return name

    def commitStructures(self,structureList=[]):
        logger.DLOG('In commitStructures()')
        if not structureList: structureList = list(self.structures.values())
        for structure in structureList:
            structure.commit()

    def commitInstruments(self, instrumentList=[]):
        logger.DLOG('In commitInstruments()')
        if not instrumentList:
            instrumentList = self.instruments
            for ins in instrumentList:
                try:
                    ins.Commit()
                except Exception as e:
                    logger.ELOG('Cannot commit Instrument <%s>\n %s'%(ins.Name(), e))
        logger.LOG('Instrument Fields mapping procedure Completed')

class absStructure:
    '''Base container class for ael structures. Not to be instanciated.
       Inherited by Page/VolSurface/YCurve etc.
    '''
    def getOid(self, name):
        oid = 0
        prefix = (name[:4]).upper()
        if prefix == 'OID:':
            try:
                oid = int(name[4:])
            except:
                oid = 0
        return oid

    def getInstrumentNames(self):
        '''Retrieves the names of instruments in
           instrument list.'''
        logger.DLOG('In getInstrumentNames()')
        insNameList = []
        if self.instruments:
            for ins in self.instruments:
                try:
                    if ins.insid:
                        insNameList.append(ins.insid)
                except Exception as e:
                    try:
                        if ins.Name():
                            insNameList.append(ins.Name())
                    except Exception as e:
                        logger.ELOG(str(e))
        return insNameList

    def getInstruments(self):
        '''Retrieves all instruments currently in the structure.'''
        raise NotImplementedError('Abstract method. Must be implemented in derived class')

    def insertInstrument(self,name,commit=0):
        '''Inserts an instrument into the structure.'''
        raise NotImplementedError('Abstract method. Must be implemented in derived class')

    def removeInstrument(self,name,commit=0):
        '''Removes an instrument from the structure.'''
        raise NotImplementedError('Abstract method. Must be implemented in derived class')

    def commit(self):
        '''Commit earlier add and remove'''
        logger.DLOG('In commit()')
        if self.struct:
            logger.LOG('Committing structure <%s>' % self.name)
            try:
                self.struct.commit()
            except:
                try:
                    self.struct.clone()
                except:
                    logger.ELOG('Commit failed for structure <%s>' % self.name)

#------------------------------------------------------------------------------
# Derived classes
#------------------------------------------------------------------------------

class Page(absStructure):
    def __init__(self,name):
        self.struct = None
        if type(name) == type('string'):
            try:
                #id = int(name)
                pass
            except:
                logger.ELOG('Naming of pages must be by their primary keys')
                raise
            #name = id

        if type(name) != type(1):
            nodenumber = 0
            nodenumber = self.getOid(name)
            if not nodenumber:
                nodenumber = self.getNodeNumber(name)
            if nodenumber:
                name = str(nodenumber)

        found = False
        listNodes = ael.ListNode.select()
        for node in listNodes:
            if str(node.nodnbr) == str(name):
                try:
                    found = True
                    self.struct = node.clone()
                except Exception:
                    logger.ELOG('Cannot clone Node %s'%name)
                #break
                if self.struct:
                    self.name = self.struct.id
                    self.getInstruments()

        if not found:
            error_msg = '<rulePG-' + str(name) + '> Page structure does not exist'
            logger.ELOG(error_msg)


    def getNodeNumber(self,path):
        folders=path.split('|')
        folderCount=len(folders)-1
        found = False
        listNodes = ael.ListNode.select()
        for node in listNodes:
            count = 1
            if str(node.id) == folders[folderCount]:
                if folderCount ==0:
                    found = True
                else:
                    tmpNode = node
                    while count <=folderCount:
                        father_node = tmpNode.father_nodnbr
                        if str(father_node.id)== folders[folderCount-count]:
                            if count ==folderCount:
                                found = True
                                break
                            else:
                                count = count +1
                                tmpNode = father_node
                        else:
                            break
                if found:
                    return node.nodnbr

        return 0

    def getInstruments(self):
        '''Retrieves all instruments currently in the list
           leaf.
        '''
        logger.DLOG('In Page.getInstruments()')
        self.instruments = []
        for leaf in self.struct.leafs():
            self.instruments.append(leaf.insaddr)

    def insertInstrument(self,name,commit=0):
        '''Inserts a new list leaf into the node.'''
        logger.DLOG('In Page.insertInstruments()')
        ins = ael.Instrument[name]
        newLeaf = ael.ListLeaf.new(self.struct)
        newLeaf.insaddr = ins
        self.instruments.append(ins)

    def removeInstrument(self,name,commit=0):
        '''Removes a list leaf from the node.'''
        logger.DLOG('In Page.removeInstruments()')
        leaves = self.struct.leafs()
        for leaf in leaves:
            if leaf.insaddr.insid == name:
                leaf.delete()

class PageRules(absRules):
    def __init__(self):
        self.nameStandard = 'rulePG'
        self.rules = []
        self.ruleNames = []

        self.globalParams = globalParams
        if type(self.globalParams['PGRules']) == type(()):
            for ruleN in self.globalParams['PGRules']:
                self.ruleNames.append(ruleN)
        else:
            self.ruleNames = self.globalParams['PGRules'].split(',')
        self.nameStandard = 'rulePG'

        if self.globalParams.get('Page'):
            self.ruleNames.append(self.globalParams.get('Task_ruleName'))

        self.structureNames = []
        self.structures = {}
        self.getRules()
        self.getStructures()
        self.checkRules()

    def getStructures(self):
        '''Retrieves pages associated with the rules.'''
        logger.DLOG('In PageRules.getStructures()')
        for rule in self.rules:
            tempPGName = self.ruleToStructName(rule.Name())
            pgTemp = Page(tempPGName)
            if pgTemp.struct:
                self.structures[tempPGName] = pgTemp
            else:
                self.ruleNames.remove(rule.Name())
                self.rules.remove(rule)
        self.structureNames = list(self.structures.keys())

    def getRules(self):
        """ Get rules stroed in database"""
        logger.DLOG("in PageRules.getRules()")
        if default_rules in self.ruleNames:
            self.ruleNames = []
            absRules.getRules(self)
        else:
            if self.ruleNames and [_f for _f in self.ruleNames if _f]:
                for rules in self.ruleNames:
                    query = acm.FStoredASQLQuery[rules.strip()]
                    if query:
                        self.rules.append(query)
                    else:
                        logger.ELOG('Rule %s not found in database'%rules)

class VolSurface(absStructure):
    def __init__(self,name):
        self.instruments = []
        self.struct = None
        self.vol_oid = None
        if not name:
            logger.ELOG('Must supply volatility structure name')
            raise ValueError('Must supply volatility structure name')

        if type(name) != type(1):
            vol_nbr = 0
            vol_nbr = self.getOid(name)
            if vol_nbr:
                self.vol_oid = str(vol_nbr)

        if self.vol_oid:
            struct = ael.Volatility.read("seqnbr=%s" %self.vol_oid )
            if not struct :
                struct = ael.Volatility[name]
        else:
            struct = ael.Volatility[name]

        if not struct:
            logger.ELOG('Volatility structure <%s> does not exist'%name)
        else:
            try:
                self.struct = struct.clone()
            except Exception:
                logger.ELOG('Cannot clone VolSurface %s'%name)
            if self.struct:
                self.name = self.struct.vol_name
                self.type = self.struct.vol_type
                self.getInstruments()

    def getInstruments(self):
        '''Retrieves all instruments currently in the vol
           structure.
        '''
        logger.DLOG('In VolSurface.getInstruments()')
        self.instruments = []
        if self.type in ['Benchmark',
                         'Benchmark Spread',
                         'Benchmark Call/Put',
                         'Benchmark Spread Call/Put']:
            for pt in self.struct.points():
                self.instruments.append(pt.insaddr)
        # Here additional cases may be entered
        else:
            logger.ELOG('Vol structure type is unknown')
            raise TypeError('Vol structure type is unknown')

    def insertInstrument(self,name,commit=0):
        '''Insert instrument into structure.'''
        logger.DLOG('In VolSurface.insertInstruments()')
        if self.type in ['Benchmark',
                         'Benchmark Spread',
                         'Benchmark Call/Put',
                         'Benchmark Spread Call/Put']:
            #self.__addBenchmark(name)
            self.__insertBenchmark(name)

    def removeInstrument(self,name,commit=0):
        '''Removes an instrument from a yield curve.'''
        logger.DLOG('In VolSurface.removeInstruments()')
        if not name:
            logger.ELOG('Must supply instrument name for removal')
            raise ValueError('Must supply instrument name for removal')
        # remove according to surface type
        if self.type in ['Benchmark',
                         'Benchmark Spread',
                         'Benchmark Call/Put',
                         'Benchmark Spread Call/Put']:
            self.__removeBenchmark(name)
        else:
            logger.ELOG('Vol structure type is unknown')
            raise TypeError('Vol structure type is unknown')

    def __insertBenchmark(self,name):
        '''Private method to insert a new benchmark instrument
           into vol structure.'''
        ins = ael.Instrument[name]
        vp = ael.VolPoint.new(self.struct)
        vp.insaddr = ins
        self.instruments.append(ins)

    def __removeBenchmark(self,name):
        '''Private method to remove benchmarks instruments
           from benchmark surfaces. Called from
           YCurve.removeInstrument().'''
        ins = ael.Instrument[name]
        for pt in self.struct.points():
           if pt.insaddr.insaddr  == ins.insaddr:
                pt.delete()
                self.instruments.remove(ins)
                break

class VolSurfaceRules(absRules):
    def __init__(self):
        self.nameStandard = 'ruleVS'
        self.rules = []
        self.ruleNames = []

        self.globalParams = globalParams
        if type(self.globalParams['VSRules']) == type(()):
            for rule in self.globalParams['VSRules']:
                self.ruleNames.append(rule)
        else:
            self.ruleNames = self.globalParams['VSRules'].split(',')
        self.nameStandard = 'ruleVS'
        self.rules = []
        if self.globalParams.get('VolatilitySurface'):
            self.ruleNames.append(self.globalParams.get('Task_ruleName'))
        self.structureNames = []
        self.structures = {}
        self.getRules()
        self.getStructures()
        self.checkRules()

    def getStructures(self):
        '''Retrieves volatility surfaces associated with the rules.'''
        logger.DLOG('In VolSurfaceRules.getStructures()')
        if self.rules:
            for rule in self.rules:
                tempVSName = self.ruleToStructName(rule.Name())
                vsTemp = VolSurface(tempVSName)
                if vsTemp.struct:
                    self.structures[tempVSName] = vsTemp
                else:
                    self.ruleNames.remove(rule.Name())
                    self.rules.remove(rule)
                self.structureNames = list(self.structures.keys())

    def calculate_implied_volatilities(self):
        """Caluclates the implied volatility points for volatility surfaces"""
        logger.DLOG('In VolSurfaceRules.calculate_implied_volatilities')
        if self.structureNames:
            ael.poll()
            for struct in self.structureNames:
                try:
                    vol_s = acm.FVolatilityStructure[struct]
                    if vol_s:
                        new_vol_s = vol_s.Clone()
                        new_vol_s.CalcImpliedVolatilities()
                        vol_s.Apply(new_vol_s)
                        vol_s.Commit()
                except Exception:
                    logger.ELOG('Cannot calculate volatility points for %s'%struct)

    def getRules(self):
        """ Get rules stroed in database"""
        logger.DLOG("in volsurfacesRules.getRules()")
        if default_rules in self.ruleNames:
            self.ruleNames = []
            absRules.getRules(self)
        else:
            if self.ruleNames and [_f for _f in self.ruleNames if _f]:
                for rules in self.ruleNames:
                    query = acm.FStoredASQLQuery[rules.strip()]
                    if query:
                        self.rules.append(query)
                    else:
                        logger.ELOG('Rule %s not found in database'%rules)

class YCurve(absStructure):

    benchmarkTypes = ['Benchmark', 'Price', 'Spread']
    insSpreadTypes = ['Instrument Spread',
                      'Instrument Spread Bid/Ask']
    attributeSpreadType = ['Attribute Spread']

    def __init__(self,name):
        self.instruments = []
        self.attributes = []
        self.struct = None
        self.yc_oid = None
        self.precedence_dict = get_parameters('FAutolinkSettings','PRECEDENCE_DICTIONARY')
        self.precedence_query_dict = self.get_precedence_query_obj(self.precedence_dict)


        if not name:
            logger.ELOG('Must supply yield curve name')
            raise ValueError('Must supply yield curve name')

        if type(name) != type(1):
            yc_nbr = 0
            yc_nbr = self.getOid(name)
            if yc_nbr:
                self.yc_oid = str(yc_nbr)

        if self.yc_oid:
            struct = ael.YieldCurve.read("seqnbr=%s" %self.yc_oid )
            if not struct :
                struct = ael.YieldCurve[name]
        else:
            struct = ael.YieldCurve[name]

        #Update the historical yield curves
        if struct and acm.IsHistoricalMode():
            acmYieldCurve = acm.Ael().AelToFObject(struct)
            hstYieldCurve = acm.GetHistoricalEntity(acmYieldCurve, acm.Time.DateToday())
            struct = ael.YieldCurve.read("seqnbr=%s" % hstYieldCurve.Oid())

        if not struct:
            logger.ELOG('Yield curve %s does not exist' % name)
        else:
            try:
                self.struct = struct.clone()
            except Exception:
                logger.ELOG('Cannot clone YieldCurve %s' % name)
            if self.struct:
                self.name = self.struct.yield_curve_name
                self.type = self.struct.yield_curve_type
                self.getInstruments()

    def getInstruments(self):
        '''Retrieves all instruments currently in the yield curve.'''
        logger.DLOG('In YCurve.getInstruments()')
        structNames = []
        if self.type in YCurve.benchmarkTypes:
            for b in self.struct.benchmarks():
                self.instruments.append(b.instrument)
                structNames.append(b.instrument.insid)
        elif self.type in YCurve.insSpreadTypes:
            for ins in self.struct.instrument_spreads():
                self.instruments.append(ins.instrument)
                structNames.append(ins.instrument.insid)
        elif self.type in YCurve.attributeSpreadType:
            for repo_und_attrib in self.struct.attributes():
                #db_ins = acm.FInstrument.Select01("oid=%s"%ins, 'not found')
                self.instruments.append(repo_und_attrib.insaddr)
                structNames.append(repo_und_attrib.insaddr.insid)

        # Here additional cases may be entered
        else:
            logger.ELOG('YC type <%s> is unknown' % self.type)
            raise TypeError('YC type <%s> is unknown' % self.type)
        if structNames:
            logStr = \
            listToTableString("Instruments present in <%s>" \
                              % self.name, structNames)
            logger.DLOG(logStr)

    def insertInstrument(self,name,commit=0):
        '''Inserts an instrument into the yield curve'''
        logger.DLOG('In YCurve.insertInstruments()')
        if not name:
            raise ValueError('Must supply instrument name for insertion')
        # insert according to type
        if self.type in YCurve.benchmarkTypes:
            self.__insertBenchmark(name)
        elif self.type in YCurve.insSpreadTypes:
            self.__insertInstrumentSpread(name)
        elif self.type in YCurve.attributeSpreadType:
            self.__insertAttributeSpread(name)
        else: return # unknown/unsupported curve type

    def removeInstrument(self,name,commit=0):
        '''Removes an instrument from a yield curve.'''
        logger.DLOG('In YCurve.removeInstruments()')
        if not name:
            raise ValueError('Must supply instrument name for removal')
        # remove according to curve type
        if self.type in YCurve.benchmarkTypes:
            self.__removeBenchmark(name)
        elif self.type in YCurve.insSpreadTypes:
            self.__removeInstrumentSpread(name)
        elif self.type in YCurve.attributeSpreadType:
            self.__removeAttributeSpread(name)
        else: return # unknown/unsupported curve type

    def __insertBenchmark(self,name):
        '''Private method to insert benchmarks instruments
           into benchmark yield curves. Called from
           YCurve.insertInstrument().'''
        ins = ael.Instrument[name]
        prec = self.get_instrument_precedence(ins)
        bc = ael.Benchmark.new(self.struct)
        bc.instrument = ins
        if prec != None:
            bc.precedence = prec
        self.instruments.append(ins)

    def __insertInstrumentSpread(self,name):
        '''Private method to insert instrument spreads
           into instrument spread curves. Called from
           YCurve.insertInstrument().

           The script uses a standard set of parameters
           for instrument spread insertion. These are:
               instrument = <instrument from rule>
               price_type = <as choosen in GUI>
               spread = 1000 (to assure that the spread will be handled later)
               spread_type = <as choosen in GUI>
               underlying_yield_curve_seqnbr = <same as ins spread curve>

           Spreads should be updated by automatic or
           manual calibration.
        '''
        ins = ael.Instrument[name]
        if not ins:
            logger.ELOG('Could not find instrument %s' % name)
            raise RuntimeError('Could not find instrument %s' % name)
        isc = ael.InstrumentSpread.new(self.struct)
        if not isc:
            logger.ELOG('Could not create new instrument spread')
            raise RuntimeError('Could not create new instrument spread')
        isc.instrument = ins
        isc.price_type = globalParams['spreadPriceType']
        isc.spread = 0.00111111 # absurd dummy value, to be calibrated
        isc.spread_type = globalParams['spreadType']
        if globalParams.get('askSpreadType', None):
            isc.spread_type_ask = globalParams['askSpreadType']
        else:
            isc.spread_type_ask = globalParams['spreadType']
        isc.underlying_yield_curve_seqnbr = \
            self.struct.underlying_yield_curve_seqnbr
        self.instruments.append(ins)

        try:
            self.struct.commit()
        except Exception:
            logger.ELOG('cannot commit structure %s'%self.struct.name)

        if globalParams.get('calibrationEnabled') or globalParams.get('calibrationEnabledAll'):
            ael.poll()
            if globalParams['calibrationPriceType'] == "Market":
                calPriceType = 1
            else:
                calPriceType = 0
            self.calibrateSpread(isc,calPriceType)
            self.calibrate_all_instrument()

    def __insertAttributeSpread(self, name):
        ins = ael.Instrument[name]
        bc = ael.YCAttribute.new(self.struct)
        bc.insaddr = ins
        bc.curr = ins.curr
        bc.underlying_yield_curve_seqnbr = self.struct.underlying_yield_curve_seqnbr
        self.instruments.append(ins)

    def calibrate_all_instrument(self):
        if globalParams.get('calibrationEnabledAll'):
            ael.poll()
            if globalParams['calibrationPriceType'] == "Market":
                calPriceType = 1
            else:
                calPriceType = 0

            for ins in self.struct.instrument_spreads():
                self.calibrateSpread(ins,calPriceType)


    def __removeBenchmark(self,name):
        '''Private method to remove benchmarks instruments
           from benchmark yield curves. Called from
           YCurve.removeInstrument().'''
        ins = ael.Instrument[name]
        for b in self.struct.benchmarks():
            if b.instrument == ins:
                b.delete()
                self.instruments.remove(ins)
                break

    def __removeInstrumentSpread(self,name):
        '''Private method to remove instrument spread instruments
           from instrument spread curves. Called from
           YCurve.removeInstrument().'''
        ins = ael.Instrument[name]
        for isp in self.struct.instrument_spreads():
            if isp.instrument == ins:
                isp.delete()
                self.instruments.remove(ins)
                break

    def __removeAttributeSpread(self,name):
        '''Private method to remove attribute spread instruments
           from instrument spread curves. Called from
           YCurve.removeInstrument().'''
        ins = ael.Instrument[name]
        for repo_und_attrib in self.struct.attributes():
            if repo_und_attrib.insaddr == ins:
                repo_und_attrib.delete()
                self.instruments.remove(ins)
                break

    def generateDays(self):
        """
        Updates the date table for the curve.
        """
        logger.DLOG('In YCurve.generateDays()')

        if self.struct.yield_curve_type not in YCurve.benchmarkTypes:
            return

        # Retrieve point in yield curve
        oldDates = self.__getOldDates()

        #first delete all the old points
        for point in list(oldDates.values()):
            point.delete()

        #now create the new ones
        instrumentDates = []
        for ins in self.instruments:
            newDatePeriod = '0d'
            newAbsDate = 'None'

            #Special treatment for none Future/Forwards
            if ins.instype != 'Future/Forward':
                dateTuple = self.__calcDateGeneral(ins)
            else:
                dateTuple = self.__calcDateFuture(ins)
            if not dateTuple:
                continue
            newAbsDate, newDatePeriod = dateTuple

            if not (newAbsDate, newDatePeriod) in instrumentDates:
                instrumentDates.append((newAbsDate, newDatePeriod))

        for date in instrumentDates:
            newPoint = ael.YieldCurvePoint.new(self.struct)
            newPoint.date = date[0]
            newPoint.date_period = date[1]

    def __periodToDays(self,datePeriod):
        """
        Convert a period to number of days.
        """
        today = ael.date_today()
        endDate = today.add_period(datePeriod)
        nbrDays = today.days_between(endDate)
        return int(nbrDays)

    def __periodToDate(self,datePeriod):
        """
        Convert a period to an absolute date.
        """
        today = ael.date_today()
        endDate = today.add_period(datePeriod)
        return endDate

    def __getOldDates(self):
        """
        Retrieve a dictionary containing the old
        yield curve dates.
        Key is a tuple with an absolute date and
        the date period. Value is the acual point.
        """
        points = self.struct.points()

        oldDates = {}
        for point in points:
            date = point.date
            datePeriod = point.date_period

            if date == "None":
                date = self.__periodToDate(datePeriod)

            oldDates[(str(date),datePeriod)] = point

        return oldDates

    def __calcDateFuture(self,ins):
        """
        Calculate a yield curve date for a future/forward.
        """

        underlier = ins.und_insaddr
        #the dates are in the legs - assuming only one leg
        legs = underlier.legs()

        # if no leg on underlier, no date generation
        if not legs:
            return

        leg = legs[0]
        cal = leg.pay_calnbr

        legPeriod = leg.end_period
        insExpDate = ins.exp_day

        newAbsDate = insExpDate. \
                     add_period(legPeriod). \
                     add_days(underlier.spot_banking_days_offset). \
                     adjust_to_banking_day(cal,'Mod. Following')
        newDatePeriod = '0d'

        return newAbsDate, newDatePeriod

    def __calcDateGeneral(self,ins):
        """
        Calculate a yield curve date
        """

        insSpotOffset = ins.spot_banking_days_offset
        legs = ins.legs()

        # if no leg on instrument, no date generation
        if not legs:
            return

        leg = legs[0]
        cal = leg.pay_calnbr

        legEndDay = leg.end_day
        legEndDaySpot = legEndDay.add_days(insSpotOffset)

        # special treatment on generic ins
        if ins.generic:
            if leg.end_period.endswith('d'):
                nbrDays = getattr(leg, 'end_period.count')
                totalPeriod = legEndDay. \
                              days_between(legEndDaySpot) + \
                              nbrDays
                strTotalPeriod = str(totalPeriod)
                strTotalPeriodUnit = strTotalPeriod + 'd'
                newDatePeriod = strTotalPeriodUnit
            else:
                newDatePeriod = leg.end_period
            newAbsDate = self.__periodToDate(newDatePeriod)

        else:
            unadjDate = legEndDay.add_days(insSpotOffset)
            newAbsDate = unadjDate. \
                         adjust_to_banking_day(cal,'Mod. Following')
            newDatePeriod = '0d'

        return newAbsDate, newDatePeriod



    def calibrateSpread(self,insSpread,priceType = 1):
        '''Calibrates instrument spreads to market values.
            priceType = 0: theoretical price
            priceType = 1: market price
        '''

        calSpread = insSpread.instrument.get_spread(priceType)

        logger.DLOG('In YCurve.calibrateSpread()')
        calSpread = insSpread.instrument.get_spread(priceType)
        insSpread.spread = calSpread
        if self.type == 'Instrument Spread':
            logger.ELOG('Cannot calibrate instrument spread_ask for (%s)'\
                         % self.name)

        elif self.type == 'Instrument Spread Bid/Ask':
            insSpread.spread_ask = calSpread - 0.0001

        return calSpread

    def calculateCurve(self):
        '''
        Calculates the curve.
        '''
        logger.DLOG('In YCurve.calculateCurve()')
        if self.type not in YCurve.benchmarkTypes:
            return
        try:
            self.struct.calculate()
        except:
            logger.ELOG('Calculation failed for struct %s' % self.name)

    def generate_points(self):
        '''
        Generates benchmark points for curve
        '''
        logger.DLOG('In YCurve.generate_benchmark_points()')
        ael.poll()
        yc = None

        if self.type not in YCurve.benchmarkTypes:
            return
        try:
            yc = acm.FYieldCurve[self.struct.yield_curve_name.strip()]
        except Exception:
            logger.DLOG("Cannot found FYield curve %s" %(self.struct.yield_curve_name))
        if yc:
            try:
                yc.GenerateAndLinkPointsFromBenchmarks()
                yc.Commit()
            except Exception as e:
                logger.DLOG("Cannot generate benchmark points: %s" %(str(e)))
        if globalParams['calculationEnabled']:
            if yc:
                try:
                    yc.Calculate()
                    yc.Commit()
                except Exception:
                    try:
                        self.struct.calculate()
                    except Exception:
                        logger.ELOG('Calculation failed for struct %s' % self.name)

            else:
                try:
                    self.struct.calculate()
                except Exception:
                    logger.ELOG('Calculation failed for struct %s' % self.name)

    def get_precedence_query_obj(self, prec_dict):
        """
        Creates query acm objects one time for all the queries in the FParameters
        :param prec_dict: precedence dictionary from Fparameter
        :return: dictionary for precedence query acm objects {'query' : acm.FStoredASQLQuery[query]}
        """
        query_obj_dict = {}
        for query_list in list(prec_dict.values()):
            query_obj_dict.update({query: acm.FStoredASQLQuery[query] for query in query_list})
        return query_obj_dict

    def is_satisfied_by(self, query, ins):
        """ checks if instrument exists in asql query"""
        acm_ins = acm.FInstrument[ins.insid]
        acm_stored_query = self.precedence_query_dict.get(query)
        if acm_stored_query:
            if acm_stored_query.Query().IsSatisfiedBy(acm_ins):
                return True
        else:
            logger.ELOG("Cannot find query <%s> in ADS" % query)
        return False

    def get_instrument_precedence(self, ins):
        '''
        Get precedence for instrument based on the PRECEDENCE_DICTIONARY
            Input :  Instrument object
            return : precedence value

        '''
        precedence = None
        for precedence_number, query_list in self.precedence_dict.items():
            matched_query_list = [query for query in query_list if self.is_satisfied_by(query, ins)]
            if matched_query_list:
                if precedence == None or precedence_number > precedence:
                    precedence = precedence_number
        return precedence


class YCRules(absRules):
    def __init__(self):
        global acm_version
        self.ruleNames = []
        self.globalParams = globalParams
        if type(self.globalParams['YCRules']) == type(()):
            for rule in self.globalParams['YCRules']:
                self.ruleNames.append(rule)
        else:
            self.ruleNames = self.globalParams['YCRules'].split(',')
        self.nameStandard = 'ruleYC'
        self.rules = []
        if self.globalParams.get('YieldCurve'):
            self.ruleNames.append(self.globalParams.get('Task_ruleName'))
        self.structureNames = []
        self.structures = {}
        self.getRules()
        self.getStructures()
        self.checkRules()

        for struct in list(self.structures.values()):
                struct.calibrate_all_instrument()

        if float(acm_version) < 2011.2:
            for struct in list(self.structures.values()):
                struct.generateDays()
                if globalParams['calculationEnabled']:
                    struct.calculateCurve()

    def getStructures(self):
        '''Retrieves yield curves associated with the rules.'''
        logger.DLOG('In YCRules.getStructures()')
        if self.rules:
            for rule in self.rules:
                tempYCName = self.ruleToStructName(rule.Name())
                #tempYCName = rule.Name().replace(self.nameStandard+'-','')
                ycTemp = YCurve(tempYCName)
                if ycTemp.struct:
                    self.structures[tempYCName] = ycTemp
                else:
                    self.ruleNames.remove(rule.Name())
                    self.rules.remove(rule)
            self.structureNames = list(self.structures.keys())
        else:
            logger.LOG('No rules found...')

    def getRules(self):
        """ Get rules stroed in database"""
        logger.DLOG("in InsRules.getRules()")
        if default_rules in self.ruleNames:
            self.ruleNames = []
            absRules.getRules(self)
        else:
            if self.ruleNames and [_f for _f in self.ruleNames if _f]:
                for rules in self.ruleNames:
                    query = acm.FStoredASQLQuery[rules.strip()]
                    if query:
                        self.rules.append(query)
                    else:
                        logger.ELOG('Rule %s not found in database'%rules)

    def generate_benchmark_points(self):
        '''
        Generates benchmark points for curve
        '''
        logger.DLOG('In YCurve.generate_benchmark_points()')
        for struct in list(self.structures.values()):
            struct.generate_points()


class Instrument(absStructure):
    def __init__(self, name):
        self.name = name
        self.instruments = []
        self.getInstruments()
        self.insNames = self.getInstrumentNames()


    def getInstruments(self):
        """ get instruments from a stored sql query"""
        ins = acm.FStoredASQLQuery[self.name].Query().Select()
        for i in ins:
            self.instruments.append(i)



class InsRules(absRules):
    def __init__(self):

        self.globalParams = globalParams

        if type(self.globalParams['InsRules']) == type(()):
            self.ruleNames = self.globalParams['InsRules']
        else:
            self.ruleNames = self.globalParams['InsRules'].split(',')

        self.instrumentNames = []
        if self.globalParams.get('InsName'):
            self.instrumentNames.append(self.globalParams['InsName'])
            taskName = self.globalParams.get('Task_taskName')
            ruleName = self.globalParams.get('Task_ruleName')
            insName_task = self.globalParams.get('InsName')
            logStr = "Processing Task <%s> with Rule <%s> for Instrument <%s>" \
                                      % (taskName, ruleName, insName_task)
            logger.LOG(logStr)

        self.rules = []
        self.ins_fields = {}
        self.instruments = []
        self.getRules()
        self.RuleIns()
        self.user_def_fields = get_parameters('FAutolinkInstrumentFields', 'instrument_fields_to_map')
        self.get_fields_to_map()
        self.acm_ins_attributes = getAllFInstrumentAttributes()
        self.MapInstruments(self.instrumentNames)

    def getRules(self):
        """ Get rules stroed in database"""
        logger.DLOG("in InsRules.getRules()")
        if self.ruleNames and [_f for _f in self.ruleNames if _f]:
            for rules in self.ruleNames:
                query = acm.FStoredASQLQuery[rules.strip()]
                if query:
                    self.rules.append(query)
                else:
                    logger.ELOG('Rule %s not found in database'%rules)

    def RuleIns(self):
        # If to process all instruments from rule
        instrNames = None
        if self.rules:
            for rule in self.rules:
                #logger.LOG("Processing rule <%s>"%rule.Name())
                tempruleName = Instrument(rule.Name())
                if tempruleName.insNames:
                    instrNames = tempruleName.insNames
                    for ins in tempruleName.insNames:
                        if ins not in self.instrumentNames:
                            self.instrumentNames.append(ins)
                    for ins in tempruleName.instruments:
                        if ins not in self.instruments:
                            self.instruments.append(ins)
                if instrNames:
                    logStr = "Processing rule <%s> for instruments <%s>" \
                                      % (rule.Name(), instrNames)
                    logger.LOG(logStr)
        # If to process a single instrument not rule
        else:
            for names in self.instrumentNames:
                instrument = acm.FInstrument.Select01('name="%s"'%names, '')
                if instrument:
                    self.instruments.append(instrument)

    def get_fields_to_map(self):
        """ Get fields/values as selected in GUI"""
        logger.DLOG("in InsRules.get_fields_to_map()")
        ins_fields = []
        field_values = []
        for i in range(1,6):
            field = 'InsField' + str(i)
            value = 'FieldValue' + str(i)
            ins_fields.append(self.globalParams[field])
            field_values.append(self.globalParams[value])
        field_val_dic = dict(list(zip(ins_fields, field_values)))
        self.ins_fields = field_val_dic

    def MapInstruments(self, ins_list):
        """ Maps selected fields/values in GUI to
        Instruments in selected rules

        """

        logger.DLOG("in InsRules.MapInstruments()")
        # For all instruments in rule
        new_ins = None
        for ins in ins_list:
            acm_ins = acm.FInstrument.Select01('name="%s"'%ins, '')
            if acm_ins:
                try:
                    new_ins = acm_ins.Clone()
                except Exception:
                    logger.ELOG('Cannot clone Instrument %s'%acm_ins.Name())
                if new_ins:
                    for fields in self.ins_fields:
                        # fields selected in GUI matches with fields defined in FParameters
                        if fields in list(self.user_def_fields.keys()):
                            acm_field = self.user_def_fields[fields]
                            if str(acm_field).upper() in list(self.acm_ins_attributes.keys()):
                                field_typ = self.acm_ins_attributes[str(acm_field).upper()][0]
                                # get existing value for field in database
                                txt = 'new_ins.%s()'%(acm_field)
                                try:
                                    old_val = eval(txt)
                                except Exception as e:
                                    old_val = None
                                    logger.ELOG("Field <%s> may not exists for instrument" %(acm_field))
                                try:
                                    old_val_name = old_val.Name()
                                except Exception as e:
                                    old_val_name = str(old_val)
                                if old_val_name == 'True':
                                    old_val_name = 'Yes'
                                elif old_val_name == 'False':
                                    old_val_name = 'No'

                                mapping_entitiy, new_name = self.get_mapping_value(field_typ, \
                                                        fields, self.ins_fields[fields], old_val_name)

                            if mapping_entitiy:
                                logger.LOG("Updating field <%s> from <%s> to <%s> for instrument <%s>"\
                                                %(acm_field, old_val_name, new_name, acm_ins.Name()))
                                try:
                                    txt = "new_ins.%s= '%s'"%(acm_field, mapping_entitiy)
                                    exec(txt)
                                    acm_ins.Apply(new_ins)
                                except Exception as e:
                                    logger.ELOG(e)

    def get_mapping_value(self, field_typ, field, new_field_val, old_field_val):
        if 'FChoiceList' in field_typ:
            choice_list = acm.FChoiceList.Select("name=%s" % new_field_val)
            for ch in choice_list:
                if ch.List() == field:
                    mapping_entitiy = ch
                    if mapping_entitiy.Name() == old_field_val:
                        return None, None
                    else:
                        name = mapping_entitiy.Name()
                        return (mapping_entitiy.Oid(), name.strip())
        else:
            if str(new_field_val).strip() == str(old_field_val).strip():
                return None, None
            else:
                return (str(new_field_val).strip(), str(new_field_val).strip())



#===============================================================================
# Explicit rules
#===============================================================================
'''
Here additional logic for rules may be inserted. The architecture is as
follows:

Autolink extracts a list of intrument names from the FASQL query. This list is
passed into a function in this section. Here instrument names may be added or
removed from the list. The function then returns the instrument list back
to the main program.

The mapping between a rule and a function takes place in a dictionary
with the name 'explicitRuleMappingTable'. The keys in the dictionary
are strings containing the name of the rule. The values connected with
the keys are the connected function objects.

The function must be on a special form:
    - must take a list of instruments as the only argument
    - must return a list of instruments upon successful completion

The regular expression module is preimported if more advanced string
filtering is needed.

Keeping the explicit rule modifiers in a separate module is a good idea.
Then the corresponding function objects will have to be referenced by
the namespace they are residing in.

Example:
    def ExplicitRuleLogicFunction1(instrumentNameList):
        """Explicit rule logic for rule ruleYC-autolinkTestCurve."""
        <perform logic here>
        return instrumentNameList

    explicitRuleMappingTable = {
        "ruleYC-autolinkTestCurve":ExplicitRuleLogicFunction1
        }
'''

# mapping table for rules
# entries should be on the form: <rule name>:function object
explicitRuleMappingTable = {}

#===============================================================================
#Helper functions
#===============================================================================

def LogSetup():
    '''
        Set up the logging environment. If logging not enabled,
        just return the logger with no handlers. This will trigger
        a warning message but do not affect the functionality
        of the script.

    '''
    global logger


    # if not enabled, do not create handlers
    try:
        if not globalParams['loggingEnabled']:
            return
    except:
        logger.exception("Parameter validation error - aborting")
        return

    level = 1
    # set the log level
    if globalParams['loggingLevel'] == 'INFO':
        level = 1
    if globalParams['loggingLevel'] == 'DEBUG':
        level = 2
    if globalParams['loggingLevel'] == 'WARN':
        level = 3
    if globalParams['loggingLevel'] == 'ERROR':
        level = 4

    logger.Reinitialize(level = level)



def isACMExpired(ins):
    """
    Check whether an instrument is expired in the
    Trading Manager sense.
    Input: instrument name <str> or
           instrument <acm.FInstrument subclassed object>
    """
    if isinstance(ins,str):
        insName = ins
        ins = acm.FInstrument.Select01('name="%s"'%insName, '')
        if not ins:
            raise RuntimeError("No instrument <%s> found" % insName)
    if not hasattr(ins, 'IsKindOf') or not ins.IsKindOf(acm.FInstrument):
        raise TypeError("Supplied instrument is not an ACM entity")
    if ins.IsExpired():
        return True
    else:
        return False

def listToTableString(header,cmpList):
    """
    Makes a pretty logging of a list of strings (like ins names).
    if list is list of sequence types, each component is tabulated.
    """
    logString = header + "\n" + "-"*80 + "\n"
    for cmp in cmpList:
        logString = logString + " "*5
        if isinstance(cmp,(tuple,list)):
            for i in cmp:
                logString = logString + "%-20s" % str(i)
        else:
            logString = logString + str(cmp)
        logString = logString + "\n"
    logString = logString + "-"*80 + "\n"
    return logString

def setAddInfo(object,specName,value):
    """
    Sets an additional info on a cloned object.
    If addinfo already exist, it is updated. Otherwise
    it is created.
    Returns FALSE if any error occurs. Otherwise TRUE.
    """
    if not type(object) == ael.ael_entity and not object.original():
        eMsg = "Object must be a cloned ael entity"
        raise ValueError(eMsg)
    try:
        found = False
        addInfoSpec = ael.AdditionalInfoSpec[str(specName)]
        for addInfo in object.additional_infos():
            if addInfo.addinf_specnbr == addInfoSpec:
                found = True
                break
        if found:
            addInfo.value          = value
        else:
            addInfo                = ael.AdditionalInfo.new(object)
            addInfo.addinf_specnbr = addInfoSpec
            addInfo.value          = value
    except Exception:
        logger.ELOG("Failed to set addInfo <%s> on object" % str(value))
        return False
    return True

def getAddInfo(object,name):
    """
    Gets an additional info from the object. Returns
    the value as a string if present.
    Otherwise return FALSE.
    """
    name = str(name)
    try:
        addInfo = object.add_info(name)
    except:
        logger.ELOG("Could not read addinfo <%s> from object" % name)
        return False
    return addInfo

def getChoiceList():
    """Gets MASTER ChoiceLists from database"""
    choice_list = []
    choicelist = acm.FChoiceList.Select("list=MASTER")
    for i in choicelist:
        choice_list.append(i.Name())
    return choice_list

def allEnumValuesExcludeNone(enum):
    enumValues = acm.FEnumeration['enum(%s)' % enum]
    if enumValues:
        return [e for e in enumValues.Values() if (e != 'None')]
    else:
        return None

def getAllFInstrumentAttributes():
    attributes = {}
    attr = acm.FInstrument.Attributes()
    for atr in attr:
        attributes.setdefault(str(atr.Name()).upper(), []).append(str(atr))
        attributes.setdefault(str(atr.Name()).upper(), []).append(type(atr))
    return attributes



#===============================================================================
# Global variables
#===============================================================================

# logger object
logger = FLogger.FLogger('FAutolink')

# parameter dictionary
globalParams = {}

#===============================================================================
# Run program from here
#===============================================================================

#------------------------------------------------------------------------------
# AEL Variables callback functions
#------------------------------------------------------------------------------

def DisableYCHook(index, fieldValues):
    if fieldValues[index] == '0':
        for i in range(index+1,index+10):
            ael_variables[i][9] = 0
        ael_variables[index+1][5] = 0
        fieldValues[index+1] = default_rules

    if fieldValues[index] == '1':
        for i in range(index+1,index+10):
            ael_variables[i][9] = 1
        ael_variables[index+1][5] = 1
        if fieldValues[index+1] == default_rules:
            fieldValues[index+1] = ''
        ael_variables[index+1][3] = getYCDbRules()
    return fieldValues

def DisableVolHook(index, fieldValues):
    if fieldValues[index] == '0':
        ael_variables[index+1][9] = 0
        ael_variables[index+1][5] = 0
        fieldValues[index+1] = default_rules

    if fieldValues[index] == '1':
        ael_variables[index+1][9] = 1
        ael_variables[index+1][5] = 1
        if fieldValues[index+1] == default_rules:
            fieldValues[index+1] = ''
        ael_variables[index+1][3] = getVSDbRules()
    return fieldValues

def DisablePageHook(index, fieldValues):
    if fieldValues[index] == '0':
        ael_variables[index+1][9] = 0
        ael_variables[index+1][5] = 0
        fieldValues[index+1] = default_rules

    if fieldValues[index] == '1':
        ael_variables[index+1][9] = 1
        ael_variables[index+1][5] = 1
        if fieldValues[index+1] == default_rules:
            fieldValues[index+1] = ''
        ael_variables[index+1][3] = getPGDbRules()
    return fieldValues

def DisableLoggingHook(index, fieldValues):
    if fieldValues[index] == '0':
        for i in range(index+1,index+3):
            ael_variables[i][9] = 0
    if fieldValues[index] == '1':
        for i in range(index+1,index+3):
            ael_variables[i][9] = 1

    return fieldValues

def getDbRules():
    rules = []
    ael.poll()
    tmpRules = None

    textObjects = ael.TextObject.select('type=%s' %FASQL_Query)
    if textObjects:
        tmpRules = textObjects.members()

    if tmpRules == []:
        logger.LOG('Found no rules')
    for rule in tmpRules:
        insert_query = acm.FStoredASQLQuery[rule.name]
        if insert_query:
            rules.append(rule.name)
    return rules

def getYCDbRules():
    '''Extracts all query rules from the database.'''
    rule_name = 'ruleYC'
    yc_rules = []
    logger.DLOG('In getYCDbRules()')
    ael.poll()
    tmpRules = None

    textObjects = ael.TextObject.select('type=%s' %FASQL_Query)
    if textObjects:
        tmpRules = textObjects.members()

    if tmpRules == []:
        logger.LOG('Found no rules')
    for rule in tmpRules:
        insert_query = acm.FStoredASQLQuery[rule.name]
        if insert_query:
            #yc_rules.append(insert_query)
            yc_rules.append(rule.name)
    return yc_rules

def getVSDbRules():
    '''Extracts all query rules from the database.'''
    rule_name = 'ruleVS'
    vs_rules = []
    logger.DLOG('In getVSDbRules()')
    ael.poll()

    tmpRules = None
    textObjects = ael.TextObject.select('type=%s' %FASQL_Query)
    if textObjects:
        tmpRules = textObjects.members()

    if tmpRules == []:
        logger.LOG('Found no rules')
    for rule in tmpRules:
        insert_query = acm.FStoredASQLQuery[rule.name]
        if insert_query:
            #yc_rules.append(insert_query)
            vs_rules.append(rule.name)
    return vs_rules

def getPGDbRules():
    '''Extracts all query rules from the database.'''
    rule_name = 'rulePG'
    pg_rules = []
    logger.DLOG('In getPageDbRules()')
    ael.poll()
    tmpRules = None

    textObjects = ael.TextObject.select('type=%s' %FASQL_Query)
    if textObjects:
        tmpRules = textObjects.members()

    if tmpRules == []:
        logger.LOG('Found no rules')
    for rule in tmpRules:
        insert_query = acm.FStoredASQLQuery[rule.name]
        if insert_query:
            pg_rules.append(rule.name)
    return pg_rules

def getInsFields():
    adm_fields_to_popup = [' ']
    user_fields = get_parameters('FAutolinkInstrumentFields', 'instrument_fields_to_map')
    if user_fields:
        for fields in user_fields:
            adm_fields_to_popup.append(fields)
    adm_fields_to_popup.sort()
    return adm_fields_to_popup

def get_parameters(extn, fparam):
    """ Get instrument fields as specified in FParameters by user"""
    data = None
    user_fields = {}
    context = acm.GetDefaultContext()
    params = context.GetExtension('FParameters', 'FObject', extn).Value()
    data = params.At(fparam)
    if data:
        user_fields = eval(str(data))
    return user_fields

def DisableINSHook(index, fieldValues):
    global gui_fields_flag
    if fieldValues[index] == '0':
        for i in range(index+1,index+13):
            ael_variables[i][9] = 0
        for i in range(index+1, index+4):
            ael_variables[i][5] = 0

        fieldValues[index+1] = default_rules
        fieldValues[index+2] = 'Select a Field'
        fieldValues[index+3] = 'Provide Field Value'


    if fieldValues[index] == '1':
        for i in range(index+1,index+13):
            ael_variables[i][9] = 1
        for i in range(index+1, index+4):
            ael_variables[i][5] = 1

        if fieldValues[index+1] == default_rules:
            fieldValues[index+1] = ''
            fieldValues[index+2] = ''
            fieldValues[index+3] = ''

    if fieldValues[index+2] != '':
        gui_fields_flag = 0
    else:
        gui_fields_flag = 1
    return fieldValues


def disable_calibrate_all(index, fieldValues):
    if fieldValues[index] == '1':
        fieldValues[index-1] = 0
    return fieldValues

def disable_calibrate_new(index, fieldValues):
    if fieldValues[index] == '1':
        fieldValues[index+1] = 0
    return fieldValues

def getFieldValue(index, fieldValues):
    global gui_fields_flag
    if gui_fields_flag == 1:
        fieldValues[index+1] = ' '
        values = []
        inst_attrbs = getAllFInstrumentAttributes()
        acm_field = None
        persistent_cls = acm.FPersistentAttribute.Select('')
        relation_cls = acm.FPersistentRelation.Select('')
        data_types = ['char', 'int', 'double']
        user_fields = get_parameters('FAutolinkInstrumentFields', 'instrument_fields_to_map')
        if fieldValues[index].strip() != '':
            gui_field = fieldValues[index]
            nice_name = gui_field
            if gui_field in list(user_fields.keys()):
                acm_field = user_fields[gui_field]

        if acm_field:
            if str(acm_field).upper() in list(inst_attrbs.keys()):
                attr_type = inst_attrbs[str(acm_field).upper()][1]
                if persistent_cls and attr_type == type(persistent_cls[0]):
                    persis_class = inst_attrbs[acm_field.upper()][0]
                    if 'enum' in persis_class:
                        nice_name = persis_class[persis_class.find("(")+1:persis_class.find(")")]
                        values = allEnumValuesExcludeNone(nice_name)
                        if values:
                            fieldValues[index+1] = values[0]
                        else:
                            fieldValues[index+1] = 'No Values found in database'
                    elif 'bool' in persis_class:
                        values = ['Yes ', 'No ']
                        fieldValues[index+1] = values[0]
                    else:
                        for i in data_types:
                            if i in persis_class:
                                ael_variables[index+1][3] = None
                                fieldValues[index+1] = 'Enter some %s value'%i

                elif relation_cls and attr_type == type(relation_cls[0]):
                    relation_class = inst_attrbs[acm_field.upper()][0]
                    if 'FChoiceList' in relation_class:
                        choice_list = acm.FChoiceList.Select("list=%s"%nice_name)
                        if choice_list:
                            for choice in choice_list:
                                values.append(choice)
                            fieldValues[index+1] = values[0]
                        else:
                            fieldValues[index+1] = 'No values found in database'
                    else:
                        acm_class = str(relation_class).split()[0]
                        fstr = "acm.%s.Select('')"%acm_class
                        try:
                            fclass = eval(fstr)
                        except Exception as e:
                            logger.ELOG(e)
                        vals = fclass
                        for i in vals:
                            values.append(i)
                        if values:
                            fieldValues[index+1] = values[0]
                        else:
                            fieldValues[index+1] = 'No values found in database'
            else:
                logger.LOG('No Instrument Attribute <%s> found in database' %(acm_field))
                fieldValues[index+1] = ''
        values.sort()
        ael_variables[index+1][3] = values

    return fieldValues

def enable_task(index, fieldValues):
    global gui_fields_flag
    gui_fields_flag = 1

gui_fields_flag = 0




#------------------------------------------------------------------------------
# Additional information for AEL Variables
#------------------------------------------------------------------------------

# tooltip for excludeACMExired toggle button
expiredToolTip = \
"""Exclude all instruments that are expired in the Trading Manager sense.
That is, the ACM method IsExpired() returns TRUE for the instrument.
Not always aligned with ADM expiry (which is used by the insert items-folder)
"""
expiredToolTip = expiredToolTip.replace("\n"," ")

ins_enable_tooltip = \
"""
Enable if need to perform Instrument fields mapping
"""

ins_rules_tooltip = \
"""
Select rules from database to perform required mapping on instruments
from rule.
"""

ins_rules_tooltip = ins_rules_tooltip.replace("\n"," ")

yc_rules_tooltip = \
"""
Select rules from database to perform required mapping on Yield Curves
from rule.
"""

vol_rules_tooltip = \
"""
Select rules from database to perform required mapping on
Volatility Surfaces from rule.
"""

page_rules_tooltip = \
"""
Select rules from database to perform required mapping on
Page from rule.
"""

yc_rules_tooltip = yc_rules_tooltip.replace("\n"," ")

ins_field_tooltip = \
"""
Select a Instrument field to Map.
"""

field_val_tooltip = \
"""
Enter / Select required field value to Map for instruments
"""
run_task_tooltip = \
"""
Enable if want to run the saved task continuosly. ATS will run the saved task
continuously when any Instrument creation / Instrument updates are found in database.
"""
run_task_tooltip = run_task_tooltip.replace("\n"," ")

yc_calibrate_new_tooltip = \
"""
Select this field to calibrate spread curves for new instruments
"""

yc_calibrate_all_tooltip = \
"""
Select this field to calibrate spread curves for all instruments
"""



#------------------------------------------------------------------------------
# AEL Variables
#------------------------------------------------------------------------------

ael_variables = [
                 # Instrument tab
                 # enable mapping of Instrument fields
                 ['InsEnabled','Instrument Fields Mapping Enabled_Instrument','int',
                  [1,0],0, 0, 0, ins_enable_tooltip, DisableINSHook, 1],

                 # Execut Rules
                 ['InsRules', 'Execute rules_Instrument', 'string', \
                  getDbRules(), default_rules, 1, 1, ins_rules_tooltip, None, None],

                 # Instrument Field map 1
                 ['InsField1','Instrument field 1_Instrument','string',\
                  getInsFields(),'Select a Field', 1, 0, ins_field_tooltip,getFieldValue, 1],
                 # Field 1 value
                 ['FieldValue1','       Field value 1_Instrument','string',\
                  [],'Provide Field Value', 1, 0, field_val_tooltip, None, 1],

                 # Instrument Field map 2
                 ['InsField2','Instrument field 2_Instrument','string',\
                  getInsFields(),'', 0, 0, None, getFieldValue, 1],
                 # Field 2 value
                 ['FieldValue2','       Field value 2_Instrument','string',\
                  [],'', 0, 0, None, None, 1],

                 # Instrument Field map 3
                 ['InsField3','Instrument field 3_Instrument','string',\
                  getInsFields(),'', 0, 0, None, getFieldValue, 1],
                 # Field 3 value
                 ['FieldValue3','       Field value 3_Instrument','string',\
                  [],'', 0, 0, None, None, 1],

                 # Instrument Field map 4
                 ['InsField4','Instrument field 4_Instrument','string',\
                  getInsFields(),'', 0, 0,\
                   None, getFieldValue, 1],
                 # Field 4 value
                 ['FieldValue4','       Field value 4_Instrument','string',\
                  [],'', 0, 0,\
                   None, None, 1],

                 # Instrument Field map 5
                 ['InsField5','Instrument field 5_Instrument','string',\
                  getInsFields(),'', 0, 0,\
                   None, getFieldValue, 1],
                 # Field 5 value
                 ['FieldValue5','       Field value 5_Instrument','string',\
                  [],'', 0, 0,\
                   None, None, 1],

                 # Checkbox Run ATS Contonuously
                 ['continuous_task','Run Task Continuously_Instrument','int',\
                 [1,0],0, 0, 0, run_task_tooltip, enable_task, 1],

                 # Yield curve tab
                 # enable mapping of yield curves
                 ['ycEnabled','Curve Mapping Enabled_Yield Curves','int',
                  [1,0],0, 0, 0, None, DisableYCHook, 1],

                  # Execut Rules
                 ['YCRules', 'Execute rules_Yield Curves', 'string', \
                  getYCDbRules(), default_rules, 0, 1, yc_rules_tooltip, None, None],

                 # should ACM expired instruments be exluded?
                 ['excludeACMExired',\
                  'Exclude ACM expired instruments_Yield Curves','int',\
                  [1,0],0, 0, 0, expiredToolTip,None, None],
                 # should the yield curve be recalculated
                 ['calculationEnabled','Calculate Benchmark Curves_Yield Curves',\
                  'int', [1,0], 0, 0, 0, None, None, None],
                 # calibrate spread curves for new instruments?
                 ['calibrationEnabled',\
                  'Calibrate new Instrument Spreads_Yield Curves','int',\
                  [1,0],0, 0, 0, yc_calibrate_new_tooltip, disable_calibrate_new, 1],
                 # calibrate spread curves for all instruments?
                 ['calibrationEnabledAll',\
                  'Calibrate All Instrument Spreads_Yield Curves','int',\
                  [1,0],0, 0, 0, yc_calibrate_all_tooltip, disable_calibrate_all, 1],
                 # price type for calibrations
                 ['calibrationPriceType',\
                  'Calibration Price Type_Yield Curves','string',\
                  ['Market','Theoretical'],'Market', 0, 0, None, None, None],
                 # price type field for new spreads
                 ['spreadPriceType',\
                  'Instrument Spread Price Type_Yield Curves','string',\
                  ['None','MtM','Market','Theoretical'],'Market', 0, 0,\
                   None, None, None],
                 # type of spread
                 ['spreadType','Instrument Spread Type_Yield Curves','string',\
                  ['None','Yield','Price','Gross Basis','YTM','Asset Swap',\
                   'Disc Margin','Spread Bid','Price Bid','OAS','I-Spread','Par CDS','Par Rate'],\
                  'Yield', 0, 0, None, None, None],
                  # type of ask spread
                 ['askSpreadType','Instrument Ask Spread Type_Yield Curves','string',\
                  ['None','Yield','Price','Gross Basis','YTM','Asset Swap',\
                   'Disc Margin','Spread Bid','Price Bid','OAS'],\
                  'Yield', 0, 0, None, None, None],
                  # Checkbox Run ATS Contonuously
                 ['continuous_task_yc','Run Task Continuously_Yield Curves','int',\
                 [1,0],0, 0, 0, run_task_tooltip, None, None],

                 # Volaility Surface tab
                 # enable volatility autolinking
                 ['volEnabled',\
                  'Volatility Surface Mapping Enabled_Volatility Surfaces',\
                  'int',[1,0],0, 0, 0, None, DisableVolHook, 1],
                 ['VSRules', 'Execute rules_Volatility Surfaces', 'string', \
                  getVSDbRules(), default_rules, 0, 1, vol_rules_tooltip, None, None],

                  # Checkbox Run ATS Contonuously
                 ['continuous_task_vol','Run Task Continuously_Volatility Surfaces','int',\
                 [1,0],0, 0, 0, run_task_tooltip, enable_task, 1],

                 # Page tab
                 # enable autolinking of pages
                 ['pageEnabled','Instrument Page Mapping Enabled_Pages',\
                  'int',[1,0],0, 0, 0, None, DisablePageHook, 1],

                 # enable volatility autolinking
                 ['PGRules', 'Execute rules_Pages', 'string', \
                  getPGDbRules(), default_rules, 0, 1, page_rules_tooltip, None, None],

                  # Checkbox Run task page Contonuously
                 ['continuous_task_page','Run Task Continuously_Pages','int',\
                 [1,0],0, 0, 0, run_task_tooltip, enable_task, 1],

                 # Administration tab
                 # enable logging
                 ['loggingEnabled','Enable Logging_Administration',\
                  'int',[1,0],0, 0, 0, None, DisableLoggingHook, None],
                 ['loggingPath','Log file_Administration','string',\
                  None,'c:/TEMP/autolink.log', 0, 0, None, None, None],
                 ['loggingLevel','Log level_Administration','string',\
                  ['INFO','DEBUG','WARN','ERROR'], 'INFO', 0, 0, None, None, None]
                 ]

#===============================================================================
# Main program
#===============================================================================

def ael_main(dict):
    ycEnabled = dict['ycEnabled']
    volEnabled = dict['volEnabled']
    pageEnabled = dict['pageEnabled']
    InsMapEnabled = dict['InsEnabled']

    log_levl_dict = {'INFO' : 1, 'DEBUG' : 2, 'WARN' : 3, 'ERROR' : 4}
    if dict.get('loggingEnabled', None):
        loggingPath = dict['loggingPath']
        directory = os.path.expandvars(loggingPath)
        log_level = log_levl_dict.get(dict['loggingLevel'], 1)
        logger.Reinitialize(level = log_level, logToFileAtSpecifiedPath = directory)

    global globalParams
    globalParams = dict
    global acm_version
    acm_version = acm.Version().split(',')[0][:6]

    # Set up logging
    #LogSetup()
    logger.DLOG('Logger set up')
    # yield curve mapping
    if ycEnabled:
        logger.DLOG('Starting yield curve mapping procedure')
        yr = YCRules()
        yr.commitStructures()
        if float(acm_version) >= 2011.2:
            yr.generate_benchmark_points()

    # volatility surface mapping
    if volEnabled:
        logger.DLOG('Starting volatility surface mapping procedure')
        volr = VolSurfaceRules()
        volr.commitStructures()
        volr.calculate_implied_volatilities()

    # page mapping
    if pageEnabled:
        logger.DLOG('Starting page mapping procedure')
        pager = PageRules()
        pager.commitStructures()

    # Instrument Fields Mapping
    if InsMapEnabled:
        logger.DLOG('Starting Instrument Fields mapping procedure')
        instr = InsRules()
        instr.commitInstruments()



...

  FAutolinkATS
"""-------------------------------------------------------------------
MODULE
    FAutolinkATS - Performs ATS operations.

DESCRIPTION
    This module reads the AMBA exported message and searches for
    INSERT_INSTRUMENT / UPDATE_INSTRUMENT AMBA messages. If such messages
    are found and if the instrument in message belongs to a rule
    saved in Task then the task is executed for instrument to
    map required fields as saved in task.

VERSION: 5.0.6
---------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
7LzzHXvPLthzdtku2av2Et76fwE9KF5G""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLADSOperations
"""-------------------------------------------------------------------
MODULE
    FDLADSOperations - Performs Database operations.

DESCRIPTION
    This module performs various database operations related to
    required ADM entities.

VERSION: 5.0.6
--------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
eNrtvWmYHEd2GFh5VFbW0dXVBxonwSIIkGgMCGJIDMnBABAafZDNaRTA7gaPHJLFQkd2oxrVVd2R1SC6JoszQ3AuaihD8lg71s5a
jZG/2YFkj+2xVh7Lsrz7ra29tPpkffpmvbm2rGNXWnq9Xvlb7drmWsK+9yIyK7Mqq4k5vOsfRqPyiIyIjIx48a5478UfJLr+6fA7
Dz/HgwNLWAmmMLWmWCqdNUujs27pdE5aSToblgFnrZZaS1kpRZQxLdM2V83t9J2ElbGTq0mms+R7ipVlBku9k7ByzGRpOA+wDMvC
Oc9ybADOgyzPBuFcYAU2BOchNsxG4DzMRtkuOI88m2BjbPc7CbbbHr2lWbvgfg/bC/d77V1wPwb3+9h+uN9P97vh/gB7AO4foPs9
TF1IjB/8vdNKIvHYD/8vc/HS1JW56UwR/s1MzU1MLVxat3mlWW3UneJjxcs2X27wNac4VWlWrlYcu9gIHp/IZKamFybnZy8vzl4q
UQ2L16pOca3BNmt2cd0veqPCq41Np8h6qyhyu1Zp2qzYbFB5bm9sVjncT0xdLNr1ZrVZtfE9L07PL8A7ThePzB/J/Ai++rH3EVhK
44o3ODN9s2nzeqV26eqqvdS0Mvilc40Kszk81uuVNXtJCUGYBr8k/CYRym4ilCluYjtxJzGWaAPctNWmsqpua53UO0pbdVWnCff6
nQSX53bih8sHMKC1jhSftZvFyQZfb0CH2hNLolOh24vVutPkm2vQh8XWYOjmbPGIUxpPetqlKvO0ytKaVZjpqsAzFuwadcWVOvRC
bataXxnXvEynFi+5sWnzLSu3BCXLFfHauwmege74YKQbjE6sb3m7Vuxmecl/j19kL/bhKPaqmlN0ZVTJKWZw5DlIj3R9UnY/dT2j
rocuh+5oJraVO4ltFbpLcxNTiddm2rqrb2t3Eq52PclPu4pz2tXbikhrqxt7Qk/9a/V6Aq8juRToZrX1RFw3d/fym9XmtWLdvtlE
OLdL4zo3oIWWvlhds600AJW92GCVLc+Yvok340nLWKqUHbtp5bEU1i4qtsbsCq8B3IfSsISXbGIFVrbSSaceF4csHLy92M1YXU9f
P4J9NkZdrUNXYxcX4JxR9tCRD3Z3Nl6rfmcX4OAmeE7A4AJ0PHXMvtiOKcGUKXqJuzB78PKuYpk+nHS3d9QHC9nKMk63U/hGQzbV
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
uL9LhU8VCv8vbeuAZg==""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLADSSubscription
""" --------------------------------------------------------------------------
MODULE
    FDLADSSubscription - Generic subscription for DataLoader

DESCRIPTION
    This module handles subscription operations on database entities

VERSION: 5.0.6
---------------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
eNrdvQuYHFd2HtZVXf2qfkx3T88TrwaI15AgCD52l8sFKc4TnOU8wJkBSNSS29szt2bQg57uwe0aEFOqhtYCZa/4adfQSl6tVrLU
oOWVKEerzVq2EkdeS4z8yUkcW1ESWakojp+yqc9fojjJxhk5y5xz7q3q6p4eEPtQ8n3GoG9V3brve+vc/5x77rn/PNT17zT8XoRf
Y1UNhVjICDGFqVXFUOiqGipdw0aYrpoRoWvUiNI1ZsToGjfidE0YCbrqhk7XpJGka8pI0TVtpOmaMTJmYjPBwkz7vGL02RfJN2tk
zWwrdz9k5M18q/9+SAnBtSCvA3TNtgbh/ZA51BrG51dDtUElhH9mX2uERe4rSuhaqKZeCLEoi7E4SzCdJVmKpVmG9bEsy7E862cF
NsAG2RAbZiNslB1ih9kRdpQdY0V2nJ1gj7CT7BQ7zc6ws2yMPcoe+9lTxig7xx7fUDdC7Pw7Ctw/saGyC+xJcM+xp8B9+mcjxiH2
DPsI+yj8fYyeD7Nn2cffChlH2HPsE3A9yi6y5+F6jL3AfgCuRfYiG4frcTbBJuF6gk2xabg+wmbYJbieZC+xWbieYp9kL8P1NJtj
83A9wxbYIlzPssvsFbiOsSW2DNdH2Qq7AtfH2FX2KlzPsdfYNbg+zgz2KbieZ6+zN+D6BPs0K8H1AvsMK8P1SbbK1uD61KUQY8x8
K8TMu6rxNDytsw142jCfvhs2noHn66wCzxV6/gg8b7Ib8HyDnj/KqmwLUvkYq7E6XJ+F99vsJry/aX4c3j/H1OXQGP+nn1BCoeLj
37d/+vzi1JW5ab0I/2am5sanlpd3VhtrvLJtVeq14uPFS2bN5JW1YiPovV7nxamyVZ6rl5nJdX1qenlyafbyyuziAqW0cr3SKG7V
2U7VLF4v11jVbHQmUN82eRnvGkV4YpDUarlhFs2aVbEqZkPXr04vLUNqzxVPLZ3Sv3/Vffx9/GoXDL1d+jHF1WrlLdM+MbNkbuxU
y1ad745fnm0Ut8trN8obZrFWt6DGOzV23kguryxOvlxamr300oobnbmycmVp2kheXlqcn10uzS2OLxiJyStLS6XlV8cvG6npV67M
rlwrzS5MTb9m6BOLC1Pe/dL4yrS8T81fmVuZLS1S6xlJ8TS+vDy9YmRnlqanp6ZnSpPjyy/NzC2+asRmXhNpp5enISNMnXLVlqYv
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLAMBOperations
"""------------------------------------------------------------------------
MODULE
    FDLAMBOperations - sends XML AMBA message to AMB

DESCRIPTION
    This module connects to specified AMB in FParameters and sends
    the request or a generated XML AMBA message to the AMB queue

VERSION: 5.0.6
--------------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLApi
""" --------------------------------------------------------------------------
MODULE
    FDLApi - Generic API for DataLoader

DESCRIPTION
    This module is exposed to users as an API. User can use this API to
    upload a request from provider.

VERSION: 5.0.6
---------------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
TukzumFU/xvk+A/L""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FExternalObject
"""----------------------------------------------------------------------------
MODULE:
    FExternalObject

DESCRIPTION:
    Wraparound to simplify external object storage in the ADS. The idea is to
    use existing tables in 2016.2, and then possibly add read tables for
    external objects in 2016.4.

FUNCTIONS:
    Derived classes from this class implements following methods.
    Read():
        Read the existing FExternalObject from database using its Oid().
    New():
        Creates a new FExternalObject.
    Commit():
        Commits the FExternalObject in the database.
    Delete():
        Deletes the FExternalObject from the database.
    pp():
        Prints the details of created / Committed FExternalObject
    ExtType():
        Get and Set FExternalObject Type.
    Subject():
        Set or Get ACM object for which the FExternalObject is created.
    SubjectType():
        Get and Set type of ACM object like FInstrument, FTrade.
    SubType():
        Get and Set the sub message type for ExternalObject like "MT545".
        Possible values in extendable ChoiceList XOBJextType
    Data():
        Get and Set data to the FExternalObject.
    DataSize():
        Get method for fetching size of data in FExternalObject.
    StorageType():
        Get and Set the type of data to store in FExternalObject like
        "PythonDict", "TXT" etc. Possible values in extendable ChoiceList
        XOBJstorageType
    Source():
        Get and Set the source of the data stored in the FExternalObject,
        a string like the AMB message ID, file name, etc.
    SourceType():
        Get and Set the type of the External source id like "ISIN", or
        "CustodianID" of the FExternalObject. Possible values in extendable
        ChoiceList XOBJsourceType
    ReconciliationDocument():
        Get and Set the ReconciliationDocument to created FExternalObject.
    ReconciliationItem():
        Get and Set the ReconciliationItem linked to FExternalObject
    Oid():
        Get unique oid for created FExternalObject.
    ExtReferences(sourceKey=None, subject=None, extType=None, sourceType=None,
        subtype=None, subjectType=None):
        Get the external item based on the search criteria.
    GetExtObjectFromReconItem(rItem=None):
        Get FExternalObject object from given ReconciliationItem

VERSION: 5.0.6

RESTRICTIONS/LIMITATIONS:
	1. Any modifications to the script/encrypted module/clear text code within the core is not supported.
	2. This module is not customizable.
	3. The component may not work as expected with any modifications done to this module at user end.
----------------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
eNqtO12MG8d5+8clueTxfnU/0knaXCzZZ8tnSf6Jk9iOTzqdcYpFCeLZchZ1tjzO3t2eeCQ1u7RyxNINIhUBjD4IbR9aIEDuCvRB
aFGgeclTWyAtUBQoUCAvLfbBRVGgQV6CvrYN0H7fN7tLcsmT5SpacXZmduabb7755vubuX+XUv80+L0LP28XEiZZEpOZUpctmd6K
pdBbtdT3JKYy7aHENEd7oFoZKGeYDmXdyUBZh3KW5aCco3KW5ZnxULJyrMCK8M47Bhu7q3iMKRVpefzfPjUk6eXf4D/jxs21D96/
9g3DhH/r177nO7xRrd/c2nNqvmGsXatcvb1xa3PjZlm0uMOrrSpvthvM9Jum5+636u72gelE/cwmdTQ9v8mrO47pNkx/1zFX1yor
5iZkXOZUTdeDvgSt7TnQ1fV8t7Fj+tWtuuNhl8sXL72xcvmCWcVRdp2G2Wp6nrtVPzCrjJncqbK48XaTE6DU+D0or60YxvoH5as4
g4qYwprD3U8cZtbqVc9DGLy5D8MAVlRj4pycfafhI/h6vXkfkdt3/N0m81YIwm3A4IVlAS0u0zyTuaQIKcZgVcC6ClNue9jGhQFu
ugBIAC079/thXoVp+oBd1Ww499PwRI+rzf191x/oRDUe4ZJGIVqKGImViBZ1x3f6QYia0SAiSqWBtFr9AG5xtxGhwBy/6tY9s7lt
1mg6zHwlwhHzaW7D3lC1edAawOg9xydOqMA7jRG2FUhU2lTT3xE7NDn1X716I2ZNYBnz/q5b2x1NJS9GdQDsk3Dy4RtOsW+MunsX
QG80PJ+3kZMumOubvMp6qD4RHqDltbeA5TwP9xDBR6xTqNIgSzc2X3/t9aWVHvnFVnHMT6r1tthOuDkaDDeMeXW36dac94FLzY9u
XrnuCGoLVoA1PQ4lXG/c7yMotpJ0rridoTmJbUPYbzt+bRf53oN2SC8CCuiNBFgRAuSL6BTTPkYQ5Y4zAigRK4GydOsA0GqsuTV/
6YK5tPnR5pIJ2K08NfESSEhEr4eqQL3Z5rUnry61QLzjzSQQZ/EmTWF/IYGEDTkSkRafROuNKwmnbKxdMLddwLRR3Xcu0JT6MHpa
WmI+Hj9G1WURu21UNspAs0jsEjGvtgF55lYbG2tLcf/0mj6Zsj35NcieXoJ3JHZrzUbNrbtV34XVa9Zobz1pSqN7IKPE8mgk8w12
2/Cd/acfBFsDrRp3HdKQo2QcCf1BeO2Ge68N1HfFXnkidlB329l2uNOoOd4Lgkbfdg7eLjcbsOieEFhRKdrg8beEnqIiQQE6+X3N
ejKPalK4CkUX8YeL00VVwMym4F3PqXIQrjUOn7hbFThDP0BbzGIdtAjRjAjLMR01THoHN/t00A4o8MYIwhvGh9duV9BYMc/dPmcY
t69VNm9vCOX/yvsbNzY2VyNDIH9pxVxtHJj7wLnbbo0geLGI8wD5lv8KEJgftHAdoFW77rxSq8PcTB8mb9aazDHvu2A2iFnXSO54
ZqMJxk+71WpyUiH5y2j3QL2AELeo4ZbZdzvI/NDoVWEc1Zr7LaADMOh+9YDa3W/yu2bVA3K3YO6ACI4IzJfGm0E3gXxvqKqP5hU3
YY+tGL9Ji/GXaP6Wa2mDOBe9vZIsSY4EhrAERvCbTGHqQ9kCE5hlwJzVmM6y8M6wHMvDW2cGK8A7y4psjMzeEhtHs5dNsEl4G2yK
TcO74BTZDDvxUHogW2NOiX2dzbH5hzKUxuHLN9hJdopKEz+UtmW2yE4/zFmT7JvsDDsLo08xk30FoEyzt9gS+yrUzLC32XPsHORO
sHfYefY85GbZt9gLbBlyc+xd9iJ7CXLzbJVdYC9DboFdYSvsFcidZFfZRXYJcqfYGrvMXoXcIrvGXmOvQ+40W2dvsK9B7swPwUuw
zoLZ/l44nmJnrgCpakof/TCvwu8q0vBTcioCyRapTKlCqUqpRmmGyZDqlM9SmqM0zxRIDcoXKC3ugBvyJ9h6DHIa5UqBzHkgHY4H
8pEsS40c5CeOJBnGBJwzZcIxlJbHQs0GyRTm7EicQM4TNkyYsVF9hXl6oQUQFu0+hSha4oSxvidXwqwthFFo2IkECwt2T0KFczYf
Kb3D6dQH3PjLGa4DshyZkBuYFDEZg2R5kk9gfhKTDCbUMps0zyd9CgMdeQmTcaTBgp1aPtuuNevt/YYXLg1/2gftUAUaHFyN2mjo
IIQqWPiPlVDznPp2qAJBH0t8AaD/91RazLcOgG6223AB2Dqyw3PIILJ+7GMohqLJRaUznwYVgxliNT1mtV9B4kuB7MsPFH7LV/bU
QF4gFgukPQ1kCzBDZwbzh5kj8HLpm35HuveRLOHjZ4HZ5FnYmD+QvwO1F4GRoE7FcoBsBmy1px/mj7CfQfkC5YuUH6N8ifLjlJ+g
sSYpP0X56SPpcIbKJ5LyLJXnkvI8lRcIDpZPUvlUUl6k8ukAWVsTrN1ZSCyCc8zcraJsNpGbPLPz3PoxtsPNjbVEHC+fCQ0XfDnP
r4IuDlVwfEK1WtsP547pTZwYTg8rLo/YM8xf+17NaWElcWpYilfzQ7KaiF8tDbcZcW2YjdwT4tyw0OesEBuHOWH5bTBiaKu0ypiL
0Kv1jcZ2Myz0+QC0K0RNtLdpi4TjKROXdko41jPPYOPSTglLgyYb7Rw+i8lCkpzEZAaSj5H1XiC2NuQisLAmz0I6o+QgLSbPRPJ0
ZtKsjZuqJvextRyxNrH1PLH1oUzLrkBOPYqYuiI9lssgMM4gLmcxEauyPrwstCqPZT43YhYnaAAYSY9mYcid6TSOsOUHUESSGjGK
fw3IMrkr70hdENd70pr08WJX9WHPBOoDxSsFyqESqCiamdKV76G4ftdXmeprgfIg2nF+BndlVwM4mQ7z9cMsCnCAhrsuT/utQDnc
bXncbfQ1D7+SPQ7pBOUmIZ2i3HTUo2Tjni+JHgD3BL7vSI13NclXD/5Tlrq6LHVegC+zpDKUbgZw0wA3PcbtjvQdUCVd/VO9YYj3
RemiFGQeKd5fPJI73+/MBtrhHMtE+MwfqTTCazBCZm/hkXywHo0y76sC7vFQI1h6BOvkEKzf/9KwshGsU0OwPv/SsHA1UMYtpmAp
By9+aVj5CNbpIVifPD0s6HcZVxJ6/fnT9yIeOkMb6SwZCUZ5fbPz1kYDTVeMGw07fjfA1AWfwBeOH3k3VR982K02RpnOeZ2XEpmH
TmGNokOjQmhg0nv8PO685zFB2cGXMXkRlbzJp0kg7jg+gg/1aqsFli//Ctaq4DSHk+sbDd/Z4bS5P/DdukcSwJq44uy4jU1ebXjV
GonesVgm8HOxQWAZN3u2iy5CWEJkzx4j6cm0WEqsiq9igmrcmhS9+wa0Jla3wF/or5kGitnVRFqDEgfCoaCxpkGGo/CugAoqN8Gr
AmdZGDPGoM2igptJWmQ5S/LLKu27HgYeI6vEOuEmy2b3liTUiH75NlLIBqfLmvZ7iNnVLfJsQtlJy8PLkBygWGMkDzV4DHpQtk+A
XNdkRc6pVCdSfJSiXJLx23lNpxaz8pS89AXv86APlpTObJrZBGWP1wmvQYKClqMwlL0ZX2HE7FhC/UCiUYpzh1piCyvlzly5Gbug
aClsOeCAYiQaFEnPvCRu00UINdRt9Bcb/OURyuNNSH6KKBlkjxWBBKRAhqYkYA1MCaeTiae0GE0JdMdEVybdAc7CA5AM93REnb+E
HKDwKdodntgdUCaN9voIzL4Oyd8gZI3GGoWTmNfxZM4RTofSUTK+HBZbGBa2BQVHkQQ8AnAcuG3/HYIga1XuzA2bs9RmYGykRSEe
GzFBnQpUIJ3K1G1lVpqTurTIQKXPu0rnUx++gQ5VDkHi7WWOZP4jX4/rHsj8B8l30KZd0GqBmtTkjiSE2NVghMycBBpHOcyz7JEc
aPFIjZPpbywXfwO7eTGym/tHDNM9+r8+DVywvBcvwi+QgV3zZY6r18me84TYRL+yM7m6dmOFakAymG9DfSgbnbwJmahkd/S3Gs2G
886yITwl5Bq+Qpbkhvdtt8FubguhmV2P3NiLJBxRBnJGVt9rtAXqGKZswd6Yo2Krhetm5Z1qbZdkjVXg1MXGsJNV6hWwXZolvwnJ
3+PinokkyxRsFQXSEjyz8qJyBmRMST6vLMmdxSFfqo/vhrZRwrIzCcvSJgKpIHZ+vH0QhTBDsOLNszqCh5VWK0z2DuzpzrBr16ql
gyYJ7/5aJpMVkaDTRKb+SGGaeO+ABYjnhlSXjd656J2P3oZ472S6CtiUKvw0sLNyHbDxDmVWADdfIYthBTS/tKeQTZQBzT/jq0EG
p0xav9jNfJoBrU9vsjtE/7FASfX/+ZfqXwJbVvS/KPqDJTXzpSCMB9oQhA+fDkJk7wA9Dn4v6jHva34G+yT2zlAvVoBngk1iEIrN
/EhnJXj6y2Pw9JdPsFkoz7F5tkDlcXjEdyrDyuiBTrIarMtDPciidf9IvvcfrAj79mTnxxhUbreiQ9MbIt6HB4CR1vcwqI+Rvi3H
pDMJPPPYbTq7TU7mU7UxMuIc/4uCldzx0IF1PwF7bUT0GoPbxziwVqZyZwNMvhOb0WFBEgjG+M+yEmp49BAWmCNiqNA1NPBw6P1m
lTk8LKzjoQvaNPygs7De5PtVOmblg4As7XrlZtkyeuc0lnprbd1SNz/aJBuwLOy/52P7j+SdlRdy6LazbRm9owT+Ku5h3cqvu06d
lQE/q7DWw8/Krjnb1Xbdt/I4qfd4s90KNcxamU2kMVmZnW8mMXezH9u7zkF85uHui6iv+QoGCERWyB0rV/ExJsRZqFfo/CacGqY7
2GmXcBZTIvpv12gGdh2mYM32prNaR7PjQBh+V2KrQwji+RFmo41rvZzjb5D12OfxwwA2GOWeNZdy8ZMP033RgKRydtDNj+v518jG
hMF7o3phhl5pMWmssv1b3GlVufM5Cr7PSI3nwEbM/a+mQiqeX2u6RnakQhGAMwPvqeS9hNZgRpGT5380/f9Z+oVmgtA+mRbaPXTL
A3E0rT9kyyWyPJQ4lubNUw40OH/OV/c0jKp1lcaLVJvZ06H+HVG/l6UvE4F8mMMasEfKAUAKFO+7fr4XXUN74NA4kjB+9kDuqoEK
MkPtXDJvO36bN7yhWxh0VjIYLKUDm3LnAzxvEB5Zizc/cRnw6vPnvOfB/2rXGZ09bNFtjYbvbrvwsYo3EaADWA63hwGiYFldqywX
+WLMi/w0JhRjuUDuSNWpWwYkNsL0Dyzdc+41tjj/VsLCuE/JfljWQrUGrJahw6HQoCnYOJBlwBxjKzLFVQvHHjItg2L1MBIlqZo8
Q4GlEvyQtTDE1FlOL/ixkEjO1LJ9PGD2R3R+DtzxSOn8oQg8dbPRG7x/zjBUzxSyHfNRvYE67FAN8kdomZrdApS1oIARHeCIYlDk
bwYGaIkiaol7bwY5yBuYD2T+GbY9VJkKXANW6qx0JKNt2h2jVmPUSuG/glHBhohHjUfrliIMxoMSjHyxO+FjrGMiGnkymOQ/CSaR
17pTwRTkxwHmFPIdYfITGmOcxlAfyXwNRlFZZmBu0wNze647Q3Ob6c0N+s0E0/HsQAfOENRpgqrD1z9CnGCGoDGT2Z2IoM8GJwDq
UncumIuxhB57wWw/ngBzj2DOEkztkcI1wFRj2SF6zEdwF4J5gPtG9yTR42SPHgD9Zz2KUGkhNdbPaKwFGisDY70QrVAuyCT4n6I2
p6hNDtq8AWWA0NCj8ReDHFhz0u8qC8KjOx0sHhaD04Dh4iPl3vUAUt6AOoCFkbm+fovQfrZ7Jsge6n7pcDw4c0SHOtCrE2TvgCkL
1s/EI+XgH8H6OQvWz6I/wQx/Mjibitad/fQsRXzgTRYQur+Fcuer26g8KQwNzgKJCjQTqmSWRDVCUU5ExzwV2t5vx0Eb1NKdMS+K
R5PDQeo7aU8WBVb/Eq30ztmBsNDAmTf5NMtTwhPR11c5rx5Y4+uDwW1Lr4DrDFLiAvkrsIMBVx6q0IpkjJVd9ainCAHjNrYy6y4H
ZVvEQBH3HBGK0SqgysmD4rcGtO2yaeV7Z1fZaBpWNlKvltF3mJWNTtitQv8hmC5aWMXtnlTzrMlttw7jMzxtI6EHgvBe2+EHVglr
kiFBP4u8DUaIHStefhNnUqSW7QjiGJZweJs1ax64YVHRE+3iL1ZeCFrMFnoy17PGe+NuUreZaGDqGY/c30wMZPQqrBz5fgh6IsJt
M0Go2FcTj9b7nnSI6eZZhX56jQl6ReUwG30jgyStI8YGGOlN1AvfJ2dQI5MD9UEONEKJcgak85QWqT5H9dhqgsJacVt0PrE8Exku
Ojmoel8vva92RjbUWeynngRTZwZqQAOdTmugATxrap/CUfsMD+8b6LfKh2B4gNFwxpcxaIBhjUAWzloDnBwMCYGx8QY4O5TDw4Mk
rsXfIeM4NDy/yn0P/Q0w2trgyBPLhwXbjoJGth1md6seZikksKz2gkihCqbBYznM2zbdobTtPvfdguSBHMWF8KBkBqNKp0aEduKB
hg4rEz99lubLi3SwCOIPQzyVPk9dpiBp7KL/1qgwU3TD8DM5ObqBNVWGQ01Ru6Ewlxzjokeht97YFDMZFe5DgfNI7sW1hs6Jbrrs
WSaNBsljMekwQ2bd0LSjS4d/8EXTjto9CzYU+v7tEbTX0BP84xQGQ+d62OhZhs8fN3wuvqX44xQK86NQwIbPgoZxHBqFvruNf5rC
ZGhX9LV9FmQKfbuiMoJB8Xjiz56CNSiK9gx4FI8hCh2N/OUXEqOnA54FibHjVkYXx+U/TeExFAAXzZ4FhdJxKOQrsXr/qxQWC6Ox
gJbPgsj4cYgYvUujf5vC5ORoTJ51WSaO4w30C/8hhcP54dsAo+JVz4LP5HH4XIfkn1L4LD0ZH+GF0q2TZbm8nC3TP/ImsRz9T77H
5dT38rKJF4MwxAba2LBtcdUP8kXbvteu1sUXfiq+ZUGXFOhkjk6c6HCHvxXH1DkSIiyC5vfdmripzd8nCUVKPKoho/dOrMi5Hesz
voUJRrM5nvhxZ+CYk29jsoPJbuLbXycTLLIRak69HtsJlHycEBgtj2uxeZOTjbncXC6TeyeXg1TNTec0RTauK3KxBL/rxayh51RD
H34IztA9xdiWoqOz+J4i3RqUmfIwZ6l0a0/D0Eo4s36jXffdwaUdsgjU2BqboisheAgHNphCp4d4HKN0Xry2srOCwdkbm6+/+rqI
6raaHrkrqQBNGeyq7yARmpicSiyKjwd5ED/8S2JRKGBAjsA0uf31OMNd7LWHyd0EcGOQuXsLgGP/cww9J1O5NuovoKT4WCa58KkR
KfHSZ76PlJkwreYr991tvzxk2Sa0XBqgpbihGMAa3VX4mUChe5AKhb++K6JfZtW8dfDRFVOEjKM/5Wlum8nVehoQFiC+Lb9i3uTm
jtNweNUXV+njP1qiOwoUdW/CVyRBeVkTi3Ivod1mnwk8Ty6XhwPc8HboGGzEcv1rIjKUCTwbOj2KIsmSgW1e5q3jFgjx+Lxvge6l
F0iJFohkXYdo+YCOleg2qUJ3olQ84e7KGELCw9G3JJKFGV/38XAig0HGB3SBj2l0pzRDd0p1ulOaxQt8eK3FHoO2JbokNI5XU/AG
KV7ew6ACnqLTJRG+TjcfegcBtx3waD2/8zxdjnYxuOhV8S5C+o9cojXh79E5Y+8vajqlSnPf6f21g6WvXrl66fKrloZ/odD5ytXo
Bv0xt/gofqAm8mwriVW+Fwu1UK07DRHJ7Im3UZKNpOuVWMaFGh4wLCuWAg6xtr3m1obMPx8mbosY/y/k+FRTERc5c+QiTvVd7UQX
keM9s6HDyyTyfF7c4MSYsBzIezJfApeQxI+v4oKLpYgvMpwUVwqG/rjAPMeAy9WYn4XCuCLsRqr4cJQtS5NhBPG/ej5ejhDnbbK6
8UKs27DtzeUCHvKDRw9i/0ZC8UtkeUUhXTWRfLTTcN4ERYivhVFG/VtCCb4jx7f+tHdhe6kTvyPhc2IiO5HPTeWyueL/AYRqWHY=
""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLOpenFIGI
"""-------------------------------------------------------------------
MODULE
    FDLOpenFIGI - Request data from OpenFIGI rest API .

DESCRIPTION
    This module fetch data from OpenFigi rest API using
    security id and identifier. Fetch the FIGI if
    specific exchange is provided

VERSION: 5.0.6
---------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
C2ueJnPkP7qq2qI=""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLATSOperations
"""-------------------------------------------------------------------
MODULE
    FDLATSOperations - Performs ATS operations.

DESCRIPTION
    This module reads request message from AMB and starts controller
    processing.

VERSION: 5.0.6
--------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
tPoxXy+U0qm+qB4G/zl1CHIdh18n/Pr/f+eOQZI=""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLATSBloombergOperations
"""-------------------------------------------------------------------
MODULE
    FDLATSOperations - Performs ATS operations.

DESCRIPTION
    This module reads request message from AMB and starts controller
    processing.

VERSION: 5.0.6
--------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
eNqtOk1sI9d588fhcEhRJEVptVp5M7F37ajdKNv81XXXm2pFystEKykiZXensSdcvpGWEkVSb0baFTF0gsoFgiAu1EMvRVBwLwVy
C3ooAh977LHoIRjkUrQI4KDopUAPvrjf970ZkqK1GxeJBL438/7f9/8z/yFN/Knw+zP4ef8KBZNsiclMacm2TLViK1Srtkq1ZmtU
J+wE1bqtU520k/E4NzFIPJPqhqvta0xl2oeyndqT6ib80k2pnoHfFPyy8JtmiXqO6Sz5gWTnmcFSUBeYydJQz7AMm4K6yLJsGupZ
lmN5qOdYgc1AfYUV2SzU82yOXYH6KptnV6FeYItsgV37QLavMaUqLb3071+RJenLv/uf+WCztLNeNi34Wyutr9Sqm12X1/1mp+1Z
X7a2XL7b4YeeBR1WZ9izbJqlcnV1u7JVq2xu0OTa46ZnHXbYccu1uFtnHpRHx67nW4eu59X3XGuXdw6tlQf3rHqbWZ5f575nNTpt
n3daLZfTIl3eacDoZnsPdni7vF2F1d+wbm7fNH8PV/3yx0gZG7ZZqvv19U6duXxJDrV2/dC1F0vrzr17bznVtdqWU+o8abeg39kS
x2mMU1Yi+q0idf09FL60Lw+Annx1Tnom96VA4n/na4GE9HIm9+VALknv+n2lKfXVQA6Uq1KgBsodSTwPdKYw9ZnS1wINnjV8ZokD
hXf95MAIlEDdU57JsuSnBibT8WlsXPJE4jf89GfGGfh0dIOpQCmp3myz3fSb9Vaz53pW/fCRBWg5dj+55Z923Tdfq7Q9nx8fum3f
Kj/13bYH+H2NUISAsd60XrvpvWaFacDUbnPPYQC7jXAeYbVeWS1vVMvOdvm7O+Vqzak93CqHyU7b9R53/N717Qj9dcZcZvkdK+oR
2/9MsRN19rjTsJMld7d+3PJ7i5+ZQQPE+KVMqNbdVmjW3Kf+5qN9t+GHGtJZmPOhxelQk4NnDjX3pN4KjT3Xd7AvVOEpnIswvNl2
q3AKJ6LOUK93u26bhXqrs7fn8lArrW++FRaj0St4gnjsUiJMj20WaggMO+/WG4/jIY7fhAOkfPew67Bmw+dIKj+T+DxUnywKBrvX
6nQOH7l8b8Rpy93TMEEs8QqS1XUkNN2QlU91RZMzsiFjmYP/rGxSyRdgREOeoEszpsuffpYugQ75ua/5iUAe6EiZQJtKoAySAcjH
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
0sYPpFkjbywYKeOKsfh/UFYrXw==""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLATSMarketMapOperations
"""-------------------------------------------------------------------
MODULE
    FDLATSOperations - Performs ATS operations.

DESCRIPTION
    This module reads request message from AMB and starts controller
    processing.

VERSION: 5.0.6
--------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
eNqtVUtv20YQ3l2SEkU97DhBC6dBQSDNQQe7OQQtUARBbUtOjephWHIDLxAQNHelMqZIZpdyYoPsJb0GSP+BdMylvyfgreip5956
aWcpJXKNAj20JHZmX/xmZ76Z5a/o2qNB+xqaTEAwRBHDjASY4kITSgqtUa3QOtULbVCj0CVa4sbMmCNa5voznWlMf42p6SNagWZB
q/rIrTGDlX5EtM7KzATdYBVmgV5jZICa1V8+xwht/ffH6vZbx522ZcOz3+rsDAf9mAs38aNQ2lv2IRejSEykDQt29GFl27Ja7cHe
0cHh8KDfKz4efu9LexKxacBtwV0mQT6fcpnYEy6lO+b2SEQTe6e7a7shs2XiikTaXhQmIgoCLgqQWEQe7PbDMVj4rn00APSv7HtH
96z/wdWt3xR3PWq13MTtRC7joolzPXQn3LvOMAQX7SmG9YLhAXqLe2+RMGC0En/cWUSs64oznnTdeBW67fgiNwof7ygUUmCKMsh/
NyX0v1m5Ikogcv1FJM7sK6imQiVXEBvQrPeotwA/RTM0RxlJ8AynKMVzkkFqZpCWmZFqzwgjTHut+oZ4kGozDfbqKZnpTGdoTqJe
0TdUn5XOSFZK9TdYrKelN1iuJ8aslKI5zsqLRE0Jq2yiFnqFM/PylFmpeY7EO0AtA2qFocxKyzOTVdMKnMJKLfHOR1kVLFTmSlst
9HQjq6VWWttEMyutzjFGz39OqrMaIMPcGE4B85aaf4LCBzpK6m/wRQOjrI7R5e2kMVtL1tP6K7zYcQIxzeo/1ENroe+j+yjVoYTq
PaGCdrl2HAeQDFut6EWoOk1MKx8ynZqtg/39/c7OY2oNTw7b/f3hzuBbWl98A3k6dOWZh68EX2EqAgdF8EGMIfxPaxlOsSLhJ/Ic
jBd0QvIZ0xgsNUlOtu/nOLhOtfUw8GXiRZP40Zcw/l3hX95dFomzrK/th0HkuYF8tL3aTcud/k7L4S+pddAbDI+Ou+3ekFa6XWdw
0t3td2j5eNA+gvXmDVqFGhz5Y4dBVeR1yOi9DzWZr12zlesT1w9zbcyT/AZs3fcDvkp6urGc+gYqPIDg9GOZ33Anp66zvAOcRHBO
P56GPsA5PpOOuhQctaUrx7nuRVA3JReCErK8BkYdP5QO870ktyRPGB+50yDJK+2XHo+VzbwUROMxF1R/0uk/zjWZiGYjv7V06dwV
vnsacOlEp89oQ/KAewlnABpPk5XjAE8bq5tIbc5LgktlSgNNbzJ/NHKm7zl3EiCd1kbgqRPFBXhuqDUpbgJD1Fr5R+tLI7Er3InM
ic9yzK/xLNZA3FX58kVR0aahY/1PnYDENZCmdgfXsEU2MCEmNrFOalitqf46vk3W8We4wGiu52XHYZHnOFRzeSDUTZArVnancKkC
B4cLPvMKzHWKyBXLe8UhB+BbwJMoFBvqVJ8osakcqiomzhdELAYX3mJQVwMvEnExFB+pT9QtV1xKxZn+8Q4zHy7+FI9U5chPVclY
ZuFb8RJz6SG8mqmb2l+PguS6""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLATSRefinitivOperations
"""-------------------------------------------------------------------
MODULE
    FDLATSOperations - Performs ATS operations.

DESCRIPTION
    This module reads request message from AMB and starts controller
    processing.

VERSION: 5.0.6
--------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
eNqtVc1u20YQ3l1SFEX92YrR/CAHok0OPtgNigAFiiCoY0mJUFkyJDlBFkgJRrtS6FCkvFw5sUH1kl4DuG8g3ZrX6CMUPfFW9NRz
b720s5RiOW6AHloKO7PcHX6zO/PN6Dd06dFgfA0jikEwRBHDjPiY4lQTSlKtUS3VOtVTnaGZVBvUSHWWZnlmlpkjanL9UGca099i
mvOQa3mI5mEUYF5kGWZ8j2iJZZkJusxyzAK9xkgXbeZ//RwjtPXfH2uvXT1o1iwbnnq1udPrtsdcuNILg8jesve5GIRiFNmwYYfn
O9uWVa11dzuN/V6j3Uo/7r3wInsUsonPbcFdFoE8mvBI2iMeRe6Q2wMRjuydvQe2GzA7kq6Qkd0PAylC3+ciBRmLsA/WXjAED49r
nS6gf2Xf7ty2/oerbv2uctiiVtWVbjN0GRebONEDd8T7lzMNwUW7KtN6mukueodb75DIwNtK/HlzEbEOH3iBJ73jVei2xydJJr3j
TYVCUkyRBfnvroT+gZcLwgCR6K9C8dK+gGoqVHIBsQzDeo8aAH6MZmiOpkTiGY5RjOdkChSdAj2nmVg7JIww7a2aZ8TdWJtpYKvH
ZKYznaE5CVvpPKPmzHhJpkZsnOHoUGZmRozmeJpdUDQmLHcdVdEbPDVPf2JWbB4j8QvgZQEvx9DUirMzk+XjHPi3Ykv87KFpHrBz
c6WtKnpWmRZiKy5cRzMrzs8xRkc/yvysAMiwNgT/sG6p9eBbVlT4Z1h8AR6KgFAE9FJchPOAjVr/B/rGZfQzfGTI8sfwn6Dgro7k
2hk+eYHRtITR6Q25PqvIK3HpDV5YPIVsTUvflQJroe+gOyjWoThLLaHScVo+GPtAs61q+CpQk02o8vMaoma1Ua/XmzsPqdV7ul9r
13s73W9ocfENVEDPjV728YW0KkxFja5K6waIIST2WWGKY6zS+wM5AucpUYDWmckYPG2ShGzfSbB/mUTWPd+LZD8cje9/Ce9/KPzT
z5bl5ywrd/ueH/ZdP7q/vbKm2WZ7p+rw19RqtLq9zsFerdWjWqexS7MH3VoHdk4rj9tQFo1mo/fU7h506ju7tc0NmodaH3hDh0H1
JUWonN3z2k/Klzwn+sj1gkQbcpmsg2nd8/mquGhlufQIOokPoWqPo2TdHT13nWWvcaTgnF6dBB7AOR6LHNV8HGWyFw0TvR9CfRou
hChgSQGcOl4QOczry8SKuGR84E58Sa8KPvZPnAG4crjPRzyQC+RPz0vemURcrDysPkjyCvZ4iZqrve7zsTp9YvjhcMgF1Z802w8T
LZJis5xsLINz7ArPfe7zyAmfH9JSBF77kjM43ngiVyEESFpa9U5lnBiCR3DoRANNrzBvMHAm77nkSCATLaQXCccpeJJRe5G4Apmn
1ipStLh0MnaFO4oS4jFavhAHdf8E80uEEqrn3FLEfJQ2JdPQsf6XTkDiAgyT3MQGtkgFE83EJtZJId1T8zV8jVigLWIsVyr4hraG
b+EUdXM9yToOC/uOQzWX+6KkCKwo8GAC/xSQ8P0FeZIcrDXT4Kbbu+k9unB9n8swEBX1nQn049IbcaEas7ihxDUVgjRdJ/1FbIvq
pR+KcfoqPlFWqnmnvTY91Udbs3lv8Qd4X5VtpHq0bpnExBd+y3vDj5i6qf8NjNknug==""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLATSTasks
"""------------------------------------------------------------------
MODULE
    FDLATSTasks - Module to create DataLoader ATS Tasks

DESCRIPTION
    This is a file which is saved as a python module for created
    DataLoader Tasks. The file executes when the ATS runs the
    scheduled job.

VERSION: 5.0.6
-------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
9fqj+qXlx4O+OmTmXTLV7lK2TA4DapfEJ9SE1PumpAyoCfkW4/KldsuvAKk6Zao/pQy5cohX7laZ+0BI0K2KWKYlb7fcf583rHbz
7b8ZDN5LILU+5A3za+6Wb//t2p5gWO25Z+Ar1/Zs3peeO6L2SK99RD1yP+n76pH6qOQ8qh69n6weZ1uN6CvCPlGQfrCH091RSX9U
1xSMqfH6TjAe9KDxKV43qvMfum6EuWNqT2fOK4nyi1YiGL+fvPtVI1GTlermIbbkTqlpb1QTGB597o17uz5t4rpLMh3X9r6+t5zV
R6A13DdvfUsV5Gn+WhXkzXtrk2gLNallssI86Ba2/KzaLdzpkHCn0oLVCbnjLm8i+naSl2GeJXmHpQfJN36XPmpV56WXWP7lll6y
ewF0BP0pc1VqmypsDkQW21VinWvtp80dLz8MAxE5bvjdyJJiypqTfw8iy4uW6XRzskW5flIvgFum5WhKJjfw0JoArChM6olQeU2o
4Gs57KPVE1uJf2LekqfW1P0ntQX5v0L8H28DtfivqfqA9Swm+9gwXS/jyDMfOLFWWV5aq56UiEwJy5X1myc3B144u7B4Yf6scOiF
2bMvw8xkdmFus68lmSKRhbaSULTXqX0zF+YvXpgX5r4wTfuShc2DZwjiWNjfAjogPBJABqgXDOaltH5TuC7o+E5WNwdfuojVQUFq
lrtPzxcunZ6eX9jsn56d7Uw72I5n/7BqaZNfYbM3ul9dONe0ZWn0rW0Ur1y5Vry5dBf6IeUrvv7IcMxBVdDNZ+cqhVMbwneUqtWZ
ErR3C5E6cny3E5PVk7FEo+Vum8c6rkRB9oarwiYQPnGtUrmxcbPw0GM82BPXHnag+JKo+zzIn76zXNLysONSijzkZ4yGU7ojLEL5
auXBpDx7rKwaVrANmn9SuvHURNNSvNF9ZvbcS2dPr5XYm90hyCSg6lis3iwtr1xdEZZEuBTqp/jAsfXfoh4mPZP4u2gIhEuwLw41
UQgWycntMbGyY1ZTQIeZ321CipCBDKF1/Ccj9x9Nv/WNQaq1lfxr8hR31teKugUbu5F8JWzu4jLbW1emC1AXSHtZJGt5iio97d9H
+9T9ISMCYyH6yj7yko1sc+BIPH4z8piNTBMxMh09+9WIuW30b6PN1Iem6L8lLSY82WLlVGnhxsrNmyXPzSPtbsyOkovUYK9sXjez
tLxeZBnAwMQkx81FvCPGsttdlepYCT0J85WmCL8uaa23S6NmoVau7V1BeX8fHiy1AVGim9avFbgpvFRALrOx8/s0cqP7TnVNy5mo
Vfomd+NjHw/4rlpPqzEQtwn46sj5cFJSG2m8ISJ5uVPLjfwGsXpWHtrt34a2/Rj42z+migI41SFytRaBafLkbx3hWkcoubJMi9Kg
IQMoYhEPnBc+FhKgHNKSttFr2knEKA8iboEl5a2k8LvvWPgRicwys808c4De5qyUlpJJ3ETt2VD8gLtpyJucYRpZ8tX6nmMhRlWe
HpWfAvctcSlJHtpKghdvPoE/3SlZ6mmVLL2qfcG2SJVCKVPsMaRmQoAxmqgcZXrs2h4uBqHNUJkLQr2GMJ0QzpBChecpcEBS7jbT
03G6HYQSqvA8zfNMfO4EocQqPM/wvCs+zwahFCs87+J5d3yeCxKxZgTOu3neE5/nFbCnzimTYZKhxTDF0GaYZugwzDDMMuximGPY
zTAPzC6vVzjNvgVt1Nk/p/HltYeOv6PHo6azowmj1UvNmcUpg7Rpqkfrvox0uo2PhOjuwE1tvtaeOhTrIrWnD4ZKtB3Jo62IOB31
P+xEVVLHqM0aIqN0VnaX2NTLtIlqzxpv9/jQWWmbA82OvDbvi+15I0297o6cQpuPEeLvdJR4tNOfxjaFOqlMb7nSXuC4LFurL4aO
JnupjtjLX9ufOSJLYSv6yXI4/iXNv2n7WZbpn8JQNt9NSHwyVIyTheg4sIdGE2AKuQweJ3Msg1QWzMcDYRfD4Zm8pv1+YHmU1k6v
vxe76oFYanEq2WEgTOPeM8JavhXhxUic4pTvbrNfkJdm0WT32srtUnm+K9YaGxH6NCY/f6bzpdKtyHifa2r7mZ6pzOFELblZhiMD
yL7vJSHC8xUw8eRV5Q/ocrPgiVMqBX0sWQEf1lSLrk0/FKEGQWLg2ff07qilffP5qi3XQa6sco7IKid192dljWPLGmc8sOvpwFG2
xp8Lsefs122MeB3DeobjPzPnD5mY/2fPwaRroew1urXZkow3mokNmHBEIcHKX73zzjv+oBkadX0m0xjUJgbFih8pLwdyhZtZWL5e
gnJqtWHPSl8DCnU1TNIlkhdWvBa0uFcid/FT6cYujVfdKRcPFRy11DyDSqgK6+7YiB622Ezs70isXFltdGvZU/gYnIkf2jkKXyd+
1vZqLnW1OD1wZMbD/DXA2bCfsy/gu/zz37evvLldX5nt6Cvz37+vtPUAq60HfPL/oQek2nvA/PLtRs9s5SPl1j5ALyZnTHwg/0Uz
Gkg/gMsGvWbZlk8w8FCyfAT/HK7drukLnU3feflKV4sL+tbGD5v9B9HsnfhncbO/gXXQC9zZSGjXZNWnAm47IV4X9oGCg2Q9GQru
sANC0Ly6pRU+JZZC84dNbd9V0tQWmzpdd4IM4CRbmtp63QqbWmIa6lGri3bJwmR6cQGtWuXG0VQ21JI/M11aY2Of4Qbpeap304dH
9mKs3tCwZyrr6yvBtoMn5TpoKrZ/Fjx65SrO9Zhx4o+wTfv7H5Dmu40mHmMTg5uzKCPNMiRGrdBDlmvbakq3apx+get9z4BP7rB5
2W918wbJVTQnyb6XHGbvHcX2S2rLlLyUjAH70wY3b1J14bxWsXFk1zNeesvY0p8lVc9um27EqGw/LGW6lCX5ua0ENn605mtYAnig
PyMl8spe7Qlr7NWYnRLrwwfmmMjNTaVd83zFNRc3XPOVkhyvu+YZ3zUXluS30UjPvzRH7YcJDh3uB2IvcLMrtgGePP8Zw02vr5Q3
glL1Qd/kpf2T6/sj6+Djkwv+MNYp9kdCu+N1bXe8ONXP/uD2Rv0hIqauxd7xSX5M4apu0volg9ArrQVLbo6WzPMbZfqGsRC62ZeC
5cXKOUhJaD4jtDlY8gNILdw8TJ61Nsrs0t0q7UkaaTyPt3TXHaAhdJytbQj9eeobxJY/pAhuGl2rIhQ9Jg1ujo8UvrycSf0yyRZR
udvNnhiNdFm2BeyWHT3yrNT1cfTIkXjQZ40nyKSA1uYIzMlSbdQ227r1+XmTW58mcWupzx0Oa64dJE5/U+iFEo91n+uyMtgy/C9o
r0/NFOqWmZBJ3kj5VwPpy55DqZ70mHcrCURa6GZK2WxUtrMkNltPyKqhMx0OhIAJWM7z+u74epMjKE85+HyQWk1R9iozRz3tSa+W
/F7iDDpb0N/qY0r/CWgSWnKPHcJWwRphIHp3Si0N/5w3hCfBfWspbziO20EWOJ73AAMzUkuW/c2LvGeX1r7zxrawLsqp9L3ozult
7pxuv3NAb8L3TCLpFoSgysrk7q8aCfzxbXfibS/xfQ+1PqfpzzefU47jJyBtlyPyOYM6kJj7c0Ev8Bbx1EFfFFOQ3b8v6F/d4e2K
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
bS7reZlBeryj8l658jck9xnmfjHojewqJf23gr7V/voOAMZ7x5AmpQ9Ijzoov0OtJVVO+vyrtadZfpDhkDqgnt4SSnw/WT2qDtaH
5QyzEZ7quNT4dCQbKI9H5XWqtO5hdUjK89nvm7e+pw6qHC1+Pb7JoVrOexY9dzRxOyG1f8w70Tzz3+JzvZ/P9R71HtXtnZQe/hxh
2E95MzImjhBcHUDqLxA2HRDpgEK/QNBzAJwvEs78ZQCX/8hg7b0qVzuqnPoI9Co5cl6V7/KMHg3epRvJ+7Z/W4+J+GxUvs1RtUP1
qAE1qBxlq8dU973sZauWqw3UBmvd1FP7BnccxmSMvU+9D3p7NcNzpaYPnoDA/Ie0XMe7rFOEthxTR1Re7n1c4s/SUGCodkI9q96r
TpAOvCZ04Nn71q2b6tl63nttC6WO3rf8hnzfD1Ev8heC8XqPOuoVMT4vm7X3106qk7VjZUen1Y55H1bPSk1Lwwl1PDwek1qNS4my
eQhfb5d3Rb6TEesTJrxlWuTaOlZ7jj38OTnzmD6hY7X9TN+vdkmakucp3TYY2+Fd1THvmuq5jStUMCGt16Nyqu8etPpytefV85Ie
yFXXaetbVs/XumVWfV76qOOtsAxaNOW/HeyuF+TKHayhT/WrZ9QQv8ETaliNSG/AuFrlGLvBcI3huvDcz6n9ylC9akztVgW1Rz2i
HlV71U41qfapKaVHfxmjHztM8j2FLqlxrxLsUaNb+6Uf3/n7uPfWU6Hs/eacZggmtlMtTEWqheORauGAVi2UKg3NPGkVwynzgfHB
B8Zrwh6+1aJn+Ly5vZ7hjlykZzgONJX1pZXydsqFvh1bl4J98zNE0okR/YI2888pS2tV3Gk3Ff3hyA5VW5i+Y0S2qSk8m21G9n2W
Gdr3+W/HZoxAQCa2MbGL3Qngp87Mn55ePF2cfen8+UvFFjvW0h2CaxJIswmNSVhqgk8TdFY7TgGqpd9Pvy+Pz2rzhinCyWqr1ytm
aDtIA1S3F2CtpxeLISxN6Q5gCKE6WVw4fX56bvHsDNL6tN1pS9Lm7nZVx6UAp0GhUi4VIKQ5sDnaxqhpDzfcmj/Qsuf/2bZtfg3+
PURJ42S14FVKWteQNgJ+Dk/eTc7SCHUi3eTC6Rk3dRbSSjc1qw8/+NLp+Uv+P0ebJs/OLbjmxXn6oXGTF+dfcJNnXpXg9IVZ15yZ
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
"""
ael_variables=[]
def ael_main(p):
    pass
"""
...

  FDLConfigSingleton
"""--------------------------------------------------------------------
MODULE
    FDLConfigSingleton - creates singleton object.

DESCRIPTION
    This script creates a singleton object of all the configurable
    variables from FParameters.

VERSION: 5.0.6
--------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
HBrkLPk/xUU56Q==""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLController
"""---------------------------------------------------------------------------
MODULE
    FDLController - main controller

DESCRIPTION
    This is the main controller script for the data loader. It initiates
    UI interaction, invokes FTP operations, handles thread synchronization,
    performs XSL transformations and finally sends the message to the AMB.

VERSION: 5.0.6
---------------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
/ZtHuNEEUeQB7CPC/wOa3Gy9""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLException
"""---------------------------------------------------------------------------
MODULE
    FDLException - User defined exceptions
DESCRIPTION
    This script defines various user defined exception classes wrapped from
    python Exception class. These exceptions can be raised wherever required 
    needed in tool.

VERSION: 5.0.6
---------------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
eNq1VNFO2zAUtZM0DaFAQWzapElYmpgEGtUe9jRNE4wWVgkKorCHvkQhdiFTmgQ7gRXxBj+wz+gv5W3aX/C069C0oZQNaV0k3/ja
1/cc32P7Fxr5NGjr0MQXMBS10DaimCo3iCoMX6stBXyVauBrTAFfBb9AdfD11NfAL1IDfCP1C3SqiVbMnz8wQmuT+8zdverRTs0k
8G1Vd2rfHRZGbuCTNXIkGCeUtV2fUcKyCWFWa83Ng/r+YX2vkS47PHUFEQ53w6gfLsi5zd0gFiQem4M4ni0EhF1wOwxhps2DTpor
7EanMF+7H1kBDCZYjgRxbJ8cM8JtV8D6i1PG2TlAcXYWuxxG0mw+YxT6rk+iIPAqpvm1dtAE2h/I8sGyOcEqOqPq40z9EhiGWhhO
gEIxKKgkpXydGytqYliWb3eYZSWmZXUCGnuyX7Kss9j27mZ6iOuQKTW3c/kElbDLFRidlmiyYyip/4CSmlFavUeppVKFqjeopVGN
FuBfYDorMO1aaRWpDoSLicTbOtwfQF6uV/sygwhDUUEEHwQIvS5pux4jcCr8ICLtIPYpsSMCKQgcB5Cp4ig5Ykq/bUpyJpgrfIUs
uDNN1MONHk6KHSaEfcJ6SqIJ5rX5dFaKO1MEA+USLLL6kc+zYiB8+WqEfSUf6OAR0XBGRGa+Qt+ABJ+SIJJYD/OZsdAnw4wv/wid
C2z0DC414fKl4AWZqGhZNHAsi8/KobIcMkIehIxH3dFND+C5AWZeosqOgTXNUA01HZ3gGXgBW9nY/bwHXGy5lcGeblfHHgYac9c/
IbCEDNaIp8o+rDgvjdmwrM7rXJmXH+P2D1LzuTHAUpE3TwPOC83nH5NuEcxSTjo1lW5xstItAMvto/rGfn3Ajz+TEJNT412uKEsP
4f6HDu//Bvk0BeRL8faeAnB90tHGis4X5BWcGpZNye5bqlEaNi5rYny8e8Y/4Sy1Zpb18mx55jeBnK6p""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLFileOperations
"""--------------------------------------------------------------------
MODULE
    FDLFileOperations - Script to handle all request and reply file
    operations used by data loaders.


DESCRIPTION
    This is a file operation script, it provides the operations like
    create request file, read reply file, move the files from one
    location to other, copy the files.

VERSION: 5.0.6
-------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
dbs0Xl22FxrJ2dl7jx2XOy1trKXNlosnT81UcL6/T9Kgl7R+1s186SOmdS/mJetldVusVRZEnWlpOUYyA2KGpI9cnpkTv97FdRrl
a/83znbipn7zuT6n3HyPlQvPinIKopXrPipT6b2A09/JjuI43SW/9VainaDQ+tcsaWOllLcoJ32pE8t9F57zp1KkpXt1FZkqs/7K
q5vRyfq6D5arCWX9ln5D0rs4zOxdlB3iMuzNbMLdhDOV6Ryd4/6ZxgA7yPV11MsInpSOzGhbHmN/ZoQ5btXCfzcz7N9L6BIDLKw1
Dv/QEyTAZgz615Yvc2IimP6xhjSJUWxGRaRJiz/7q8TpL0EsSHJRBeBchFMyEKSI0aNVQtK+LwizmaO/PP0VnCyvJ6vNHpnFxOkh
2tTj9EDfiV92AXBEvJlbm609QfvwnrnBV4g381T3ANWBNd3AFWl/H+0Dk+rTdLzg3onqM1QPpwPcvbA26/SI2GXDmnVy1g/obmGw
sM2iHXFovWFHWDhgp3g/5e4T25vnFSi9EaUjPbKWGacCXQlXAYXvpWO97bOafbzvXbXZD9Rep88ZYM0+UFKz9NsLDT5d/TPcOu+2
9moKm2q8Ns14sAXWW1p5aQ1ykqJI107SPXrpN0Mr9ACvB7My+v0C2LK+KevHQNTehM2bsXkLNhVs3upSwOPzkg076iVPY5LI6SIx
IaX/zW9i8wXpuTDEcccsN7vzuBX3ZvRIzPo5LwBu2iNBXlowycINSqryIDbwQbUW0J9z2IABsgQ2VWwuuKwZ39J6AV6zMck21WHI
l6ZyokG8qoDgPMLigOKsVmrluGpExaRHA1dq1lUmN/XV5UWbmXA66pUPs5xrnQXh5GS2zFB2UJYiGHu/ghtnfhx05aoPu3/Tf7Z0
ylJC8YvSrzzs+zW99ijpnLwIWIigUzLRUc7zUt3LexBuUzrnUdlOEOnsb4DfTPptqN/R2lkQLyIAkARQuPgQ94m8Pn92Q2s0OIww
vIFo27DQJU8CYQJO5TfdPQPu4lpIhF2c+aua9aI6KxY4y3DPgEO67wjzt96ReOAczXck4T+H9pPuPtGxiJ1aSm+Ad8ve1Op/Sj3M
yTKEKQTq2Xn1tMz50owrEK8cZ0vpMT63h/ufADIaccLgnKMiKXmypmkXuU0vrgleWaSuE/dcGw7Uu+ero058o88Jc3/jG/0Qu+yB
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
bdxG7fuc28Rp6qeiXuwPHV573um5Eanv9X1Hg3oyZJc2bhdPy/v2hcQZ5e0cpbnFugV6sigtqxHrAbpi2MnjWUUvvaE8LYqINgjR
sRknTNd+K1/rrPQDPkOc3ZlQbTIcsnffiFz7mBZqlrRQ4wi3eYbuV3K9ie3S0h65L3pF2bNaU/vnS6JvTpVgouAE2D82ZX0bkqR2
pKXd19Lut77JSRrK8TFXTrP+Oxa/P8Xm3Vil/jf9NfKC+rW86wU1+WpWqh/Kqfi4dSmgEbCeMQBN/rOdz2L4nwVJlBBY8uY+mmrw
19MZVSwMQ8I/lk+V85BuDIl0wwv5Z7rYAxNH2V0QPfqTH+mDepdFPmw36TV0JPVWJljRjqlthdmY+dN4Jy+yq+q16vLyyrOXq9ck
M9V2nfoyox+CKbnmupHJcHh+yCHOJVy3F6CZEdL9uRxHdxZq104K6wrU6Ym6F6Bo1diCIU36tAuvrlb4wvLCRWuNj1ypVa+s1BbP
W6tsylZX4lRdFuPX0LVOcpZFq479CO9bNp/sZgi21rGbhZapas+xWm28Wmd3tLJ57txp6S57ilX9MOev185XOQvyVVSlqxcuIOPx
VVn3LN+WOiDTIlvPscMYKxoW66OWtXCtHD+3vnx5AcWG8YYjb7AeR5Pj2JwwXG/l5w3XKaKMDbu8TXreeR2O4ewxnnUxnKy3YLdC
m0Zeqpl8HtmNeybYdWGx5vqDwGvBlcj8Po90zh11iRG8V+p5Lmzhm90qrsIlpSJlOw9AgZ8DPKBkiqNsoPecnzne8wH+atDRcMpk
ZOLEDpSK9UtVYf07NP+s4Tpuw73gArsXMNc9p6shZQlPIdUOKK2H/G4O1gUjAH/2pIfYeXuHb3a5x/s8Cp+AczaqnGltvAP207vk
Pk/ZN5ukXMvfnB+n4j5cmvfcp2vl/f7dEospIVNHo105KRvKHRo88rYctxfjaLyqVe7puCucta1FPEWf74jbd5z/DvT4nOuUX04g
/Fy6FMpX+RnXM6IVlRHt8utdxhnsUtgNmRkiy+cgcXyPpfUcO3gXfU7fbY1W2BhQ5aJytmYnbGOXkkkKyBIJU5ixl2sS3IJNk7o8
XtSL7DCeYBNlWGU4SW35v6irK2l98HfUh7UDXH8A3o1GSp0N45vrGF6QgfSavIP+ckLp2OAQARdx6glrxRJGjtoWSHJSSNN/B9Ic
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLFTPClient
"""--------------------------------------------------------------------
MODULE
    FDLFTPClient - Script to login and connect to provider for all data
    loaders.

DESCRIPTION
    This is a module which contains clients that connect to different data servers.
    Each client provides functionalities like connect
    / disconnect to provider, upload / download files from providers.

VERSION: 5.0.6
--------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
QcHivQ==""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLLogger
"""---------------------------------------------------------------------------
MODULE 
    FDLLogger - Logging 
    
DESCRIPTION
    This is a wrapper on FLogger provided in ACM.
    This defines various kinds of LOGs that can be 
    used for logging messages.

VERSION: 5.0.6
---------------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
eNqtVU9v2zYUJyXZluU/sR13WNsN0LoVqAe06K7DMMyJlcyYYxe2k6LEAEExaVeJLRmUkjaBvMt2DbAPsENy7Ffibdgpn2DDTnuk
bCfpeqxlvh/5yEc+Pj7++Bd676dD+QFKdASCIoIoptoUE6xQI5pCnegKDWIozJCMwizJAurT7DC1y5EcNWjmN0RMZtIszV1gkqcm
zYPGYgWaOdb4mGoD1LD+/Bkj9PTj/ay9Xmu/49iWDb+dVqcTTiaM209tWfGDSdphtZzBdr/9YtjudZVi+NqPbPh79hvuzedgEQb2
ztJ4zsNTnzJq+4Hd3N57dmNB2dgPWGSfetwPTyL72A9oZIdju9Pbjez4tRfbIy+wD1m67EkEk4xDbk+XzsxYFHkTFj2zrAOnPwBv
vrUf9x9bHzEg1/J4uw0s8NcjfOvE61DKULblqVegJ0aX6AotcIIvMaA6carLc/zDWOixlmg0ex/9ihcG1HL30SKTaJc6nCq60hZZ
0OVBhwAtwBxgAdAELALmAUuAVqJf6glkD9gUQFcGXRFwA7AEWAEsx8ZlJilf4cVGsrGoxNmjbIJoldYutEX1/FGcOzITlOQTKykk
ZpJLSkkxqSRVunlhLWovUbBloDj/Oz6zMFpsYnT+5IMWVVq/yMvxryDfF5u/bAZWis/Rc5TUIDfvdYXR7u70RKblbO3vktzLZr/b
7u6KjNPv9/oN41rG81qTQt6fawMEqcFBbvUG7eErt+McOB2XvSVftJrDZqfXbDl9t9sbtnfa202Zeu6gt9/fduSQehDG/vjM9WaH
7hvux4wr7S3Dm7G5/QG0oVLdcwaD5q7jbvV7P6Wqe3fm33Na7aZUbyj1LZfKg73hCxfmOUjtSmpOZ6/Zlt2i8KLfO2i3VN+wgYlx
zNi8YQkj8GZM1JSz/siL/TBwZ4z6niguNzBlp2wqSssMXzbLy0R3D3l4zLgw4CZwUZDSZTPPn0aiEM3iuQuKU+gx4Q66aqnceKou
YSPPixBeXpJC5i3fkKIiRVWKmhSbUtwDAa7W4PZvh8HYnwzAkSmLw4AURkrhUi/2hO4HsdAnLBYmDN2PwQtSh6YLi09Xm0udWDKB
KO80u7e2Tup328tReeftiM2lolFXXpPycl3gCTc8PBLZtE3KsLk0RC71R7HIqDrZvBPfKDzhI0ZKywCn2UEKy6aMYRqGdWhIfj2t
igjZuAm0O/Uj2PCS0jipvL9ZXl/FUGTT0IsMrBDyd4g/Au2/xTWrPpufify6JU2ioaQWbGJTK+MioCyrb1W3sKGXdQ1nsfb+97dV
qPxf/89nFv9K7sNqwbl1Qg8cf4dVZEe3HzF5E3MrSjtAa0pDsXrGLrAiNyC1Kwy0UIkVuT0ESsMIaOMBRvJL8JEBT5YBj5aGgRwC
DegAX2aoKa0oAmLId88LMYvip2l8+GNY6rwiqUIS+4rUuXSFS5/Oq4owbncCH5vs7cj1g3F4XlX8cqc7yz+R1mrXOjwmIjPnkK7E
cKBBjBbIhsY/l2NsKR6txZfy5DKu9O9HRe3LE7Hg07CMbl3jT+QVKYqc69Jw5LpCj84ikY+5N2KH3uhYZKMYlpukTjyQ4qEU91c+
pYvKWYTpqrRx3Vs+3DhifjcL6cmUfS+pMpLTGYVPtXVO6OY3lmYWTO0/2vErEg==""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLMenuSupportDataLoader
""" Compiled: 2013-12-11 12:52:59 """
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLMessageAdaptations
"""--------------------------------------------------------------------
MODULE
    FDLMessageAdaptations - is the data loader message adaptations hook.

DESCRIPTION

    Message adaptation hook written by FIS.
    Customers should not make any changes to the hook code.
    Alternatively here and are instead encouraged
    to create FPythonCode --> FDLMessageAdaptations_local in his customized
    module and add the required changes in FDLMessageAdaptations_local.

VERSION: 5.0.6
--------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
6DF8+t3fcniwUArj3pp0EZ9QVmpqsd+RdDw9MYtL1GdvwgbU6i3W8tzZWotTQurIt2JKWp7oNeQiRHbDQsEqqaGa3EAI7y+FmPM5
rzjThuKMSebKCNCwvYk1zjYc+13wRpbFcPh3Xn0Carp0wcOvquD7w2oPrQJeA3mG5RVdsliQ3CFRGMh9QXG0kWODNGhDkECEDQ+j
bYG+kQaXTvhDDGfMoXNdb/Zrlnt9/4QPSjBxIn1HvSoatD2Inu24linQ9jwF4whqI9D6GYWT20FgMFZSaAtN9kEwyvQEiKltEhmx
6AyyV6U8Z1II5wxnjNJbELFSxMoGrqOqZZbSuyk27osNlV6m2IQ3llTiSBV+lyLkAaFg5uhMTR8cpa7hShAmiLfV9KmpyinJZImd
3IVlVOUuoptn6Vz+0cz55QJ8yYfh0syJ5UWmtiyjCSB9f7Ola85YKtlr537zbZmpqX9P3m+6rryny9a/I/O+IH/KrqTlkaBqiJOM
OLaFZZFtxVvn6H7suxWfLS8pO8psy9RU7ubb3MPBUe9hmC/LmpQHsmfUfWxd6D+m1gs8N5pM1CFqEog5ie4d8seaQ/ytR1y4Tt59
Gg1XfdoE/jfI3XYCpv0TZMolI9isq2+hZuZotpPL1WI5NLNeXcT9RC63sjq7yGesX8Pn+U3cfBI3f0DYwmTchJvXaBQkDHvcPICb
UVq9xc0bcfMgbh4hShXcLOPmR3CTc+x8EaDXegg3jzhT4pcwyS/j5lc0ZSvyYR/FkfWbuPk0bn4HN39AnBEEtY2bP8cNchRbV3Dz
rwSYj11rEDctuEnhphM3PbjJ4GYfrR3h5k7c3EsdPm7uw80YbnK4mSO+a9yEyU2R1N26ZKkmBlFmOj3uoDQiqR8xEBFjCpO+vFOX
GPfWe3Hzftz8PG5e0RUEJ4Eg/SIBjqBpQmGejTKtP9LVShd6ApGvCVtDf0VXVmlkpIaWXmTSwgY2uKxIi2FWHIeYNG42G3JaYO3G
zX7DN3K4M4dh2GzQ5HQQJqzfZ8bhL2K2mx3m3WaPeczcZB41g/DXYd5sbjZbIUzEWs1DZtLMmG0U02NugGtSZtQ0za5YCq4OmhOQ
Q5e51bwH0gXN3XBt0AyZh81ec6eZjHVD+hbzBF3Raobh1wm/oGmYQ5B/3HzE7IYz3ZD7fjjTYnbHdiZ6YrMwr+mMfV9gH+Tcae4w
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
PreLr4R7SbTdC/ugVdyXSQb+AEoujbDwGZxw4CsUNPef8CJogcnHwbOl9PhUmbr44YdGR4YN53EPLXvswfLUA4dPis07eOTI3eWx
B0bKTGQ3VZ4aPX54Ynr86HN5vbZ/dGJ68qHnct72sfGp6Vb+pEMdY6pyYYasw9n6c5Bmt++/5bnNJydJuHnV0MorJ45M7gffKku8
l+2/rdk3WZmZn65eqKio9/mZyxWbs5ydt3D47PjISZJKI6MSysiaQMb5YFhETHrRHHYklCt+PmQl6wiQTn2eNYGEon4p5RfxROX5
Kg3iyB3HtI2/S3SH26M+shtuutQ796itOO/KdfUySim9Vi8lq/Yi6ao2iRB1SlnvaZcKLyWpcBBS4TUBWHo447JKPsS9eCwDuoEZ
5/mZpMpsspjZs6CitAALB3O5wDGOBaVL5Hl/kszqDRlU+jE46pG/9zF6EyOVuZDKfaNKR2F58jZzlcpNphLmddiNBWmCeUxqxTYS
iUlG0B/1Sg4qJ1P7DBnUCMpiVmbZjvN23tvmoC30Hji3qZdGwc6MNNjlblLoY4qirsftqb+NtzN6+4pJ8qWHXdy91Qin8ibcHlaZ
hYRvX/OORtLtf4wJ+JxvuAPnUsuZRhoczSsZNS872Miey5F60OUODkTYFYXk9zusSKPrSvTyjYo4fhu/g246tz8Eh2womnjDo4mH
s6rH7rF71ewVAHB7maDQcA7Q3cbsPr7/IV7v5/XN7hAdvd8dWum+CpK9yDmwM2+BQ/Nhazm9vHX5uuVtTL13v7uFDJwBqEQqCfkp
exPJk80dj/2dPejmydgYor/NJKG2h7ftLbSv6GK2ebtbhHyvbXXzfml/XZXc4pWke1zpQ4q1u4UR7iIr/bSFhOrra7vpeTP8vPfb
W7kd0Buh73wdB+dZy0l6oi4aV5CwPM/UhYaLuWy6YyYI7FkZZMRAg+kUd7h99J3f4HY3Nrl9YJN+LPpIlOp+ktrCZlbjvP00yvWR
ovj55Ru4li3uDVdR8lO4i5qFNomy7g2IDl/e6e6ksk8v73KzVOYb1Aq2uruoze2upWn9Oll3d9Oxlrt7ZRt9lz30u/1qZKVI63tp
/Xq1PuwOu93nTbpLRGDtUKh7CfcGt9tFSl3e7XL3uFk3djW3bNRu5dIG15ty96q1PY0b3J2MPIitnpWd9jZqa3vEJLxiLLXo7/30
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
BI1RjCq1zHoM6I0qDAXm1SFlEhAukfGdcRi0LB2mopzJ5DiurtLHSQyJtaMyECJ0PB+5AKOWAiHGNC8uPru6tFgBLWrBr6CsTpVV
sVLMJlw9VeNO6snw/eHSc0GbtKqV54rjrD8NqfrYgRokx1Jq/LFTU+MiI8/Nl6KkyC0TB6OpzlECrYwaC23JMajKcgcEqFor42mW
Qbyg0ypFbVKlKLOSMw1IKSfCo/8tOgbIn8oy/v79bl5oI6UXBfwVacqHJmpLw333HgskRUp3pn3wG5jMEIA2qKCNwJ2ZEaWGE3aU
KT9iP6SPlVbKtL8pi8Q32YIJ4z6XARzpBQNBCHI+smyuixyoatCE75bFdRmUuC87SRlxBZGGYjChgOxQLfpBtpioJ5RWh61GHaSZ
wZ2TCitHJSVyx6SVUjkOpAzjLN3Yp036Z/VYK1JrX/MvJq0+Na10/6kKM/ONnL6CKpoDtUaP20K1bl+F69Ufg/NP4rRavIZU16sL
UGupUjt8WK7cExyVXNsebq9sJwLWVm+pKqVPtK9Ti9Upz52ordX4dFt5UUqMnTw+RgOpflgOA/JGeff18PSKtfJVKWX8p0t9vkFU
1m8iq16Nj1tKqWL0UynVnrdKYdsxvP+zlP1dDO+jengn/GFiWPWoqsjrP7BGBfq0IGe9aTSObmtFDHy6wFqY6hz1XAHhphLxQqJ+
X9ilqBXSab9MnRpM7YMgJhoZpdZvxt4RqmaUaUGbEWL2V5zYcoQs1EsM/gstM0xKu7LHHcN1bOFYfwmuKy9C/k5Avn8hbL8EoP7L
wh5baZlZ8drn0IqVUeaP5eRyigT5K3Rel2dzotdBriOayOo3sbIo1QntczP2B9w8ECrDKNw+7Rexcr4ZzqFcLT1Kq/wKoYyrrFyl
X4AwWCeu0I202Lb10Tm0tPfEOybKp09NzczPlaeoVJycfko5GEyUx8ef2lzO2eXKOf2Qc5ZDy2ErJJ1mOmEl74yG7V83lXMinvaQ
clT8dNgNoe4i/7zqyT+PbgdvQShmfbV80cbIljnSVQTCI9hPRlxdY1ZJOpyTs543Xnuykk5YTGgr/ECt/eg+xWLKJwh9whWE7OvM
CRVxmYuPgCV6gClfz14UbuIy3QQqtClsMAk+LJd9EZPqYR1OmPEYy4xhKF2iobDmAEniWj0KavLRrcwky5E3todU0dFzGxzCPFFk
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLWebClient
"""---------------------------------------------------------------------------
MODULE
    FDLWebClient - Performs WebServices Operations

DESCRIPTION
    This module send request to Bloomberg using webservices and receives response

VERSION: 5.0.6
---------------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
iQ==""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  InstalledComponentDataLoader_Bloomberg
'''---------------------------------------------------------------------------------
 MODULE
    InstalledComponentDataLoader_Bloomberg - InstalledComponentDataLoader_Bloomberg

DESCRIPTION
    This module runs the TestMe, ConfigMe and LogMe for installed DataLoader-Bloomberg

VERSION: 5.0.6
---------------------------------------------------------------------------------'''
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
MA==""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  InstalledComponentDataLoader_MarketMap
'''---------------------------------------------------------------------------------
 MODULE
    InstalledComponentDataLoader_MarketMap - InstalledComponentDataLoader_MarketMap.py

DESCRIPTION
    This module runs the TestMe, ConfigMe and LogMe for installed DataLoader-MarketMap

VERSION: 5.0.6

---------------------------------------------------------------------------------'''
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
X/QdpRE=""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  InstalledComponentDataLoader_Refinitiv
'''---------------------------------------------------------------------------------
 MODULE
    InstalledComponentDataLoader_Refinitiv - InstalledComponentDataLoader_Refinitiv

DESCRIPTION
    This module runs the TestMe, ConfigMe and LogMe for installed DataLoader-Refinitiv

VERSION: 5.0.6

---------------------------------------------------------------------------------'''
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
H/9u3WA=""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLProfile
"""-------------------------------------------------------------------
MODULE
    FDLProfile - Defines DataLoader Menu operations.

DESCRIPTION
    This module defines DataLoader Menu items

VERSION: 5.0.6
--------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLRibbonGUI
"""--------------------------------------------------------------------
MODULE
    FDLRibbonGUI - layout the DataLoader GUI with Ribbons

DESCRIPTION
    This script creates the DataLoader GUI as Application. It takes the
    required input from GUI and passes it on to the controller for
    further action

#StartInsQueryDialog
#ShowProviderData

VERSION: 5.0.6
--------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
eRIiKlL+PzFGi+yM8zpobhmpj59k533s/JRPyUpIKwwfYgdyLpBd+S9alMGDGFQCA4LpmlZs7vo0xM9H2Plpn3d9KpkW2HD6IauM
fWGWJhkYEUvZXONFicxSEtbJhYayzsoDF4vWxdFknL/vpbhkcIYNaubqmTzgydPOhIxX5IdYApG+oQobK1pjUvZpQIoOjVDbbeQ6
ZC4PqTzbhaJ1QSYa8LZq4mmZqLkaUeacLlrTqpb8VR7HV1nFDRatwVz9ePlTJwNPLaVuSLL3wVoq0kkIm9ACFzQO3iMXRRIpPCQD
AyrQ4IlBRslVXIXIEuK0DI4MDphgU1mszHuNs7UhYijtXE07LCoyCOSqjKQPbKZvq54eJRatB3MxxCtpEhka0KFGb5zK8ZB6KI9E
iaQMeCmtlWlU7odz7QhtxoaSEQNVIrq3yAGRnKJ1QlVIGiwZYrMbqkJeSmtlGpX7kVwzYkqiTkyXxIFqxMR8GTFpHzmsKiAFWGRS
tNyAogwxHo1qTC+J8h5ReUclco0nr6J483pJlPeoGsPnadUvZFY5eksESnVMDaUyQSZJGyijUdrjuXpGOfMAJEvCgJdQgZ6sXoXz
uTiyQthnlNgGlRPhhCSMlcMQ5xqQAzC1owCRzTUiDygJTfKGZL42VUkILnle1TZV1030TSRZTgvKGU7fWMOiXchqgjqwiVpBkCU0
XZDbt86A2ZnNNRlvQsd60kmBwfNzV3NNxlstnYFRyzWVENVMunYvr5c4nxJLcwPnB8fGqQHnllYS3ljVPxO5rmp55OYEPbMyzleW
s7tKjgtTY+dHEuOTZ3NtNK2tpujlXizPte9uuRIzU4MT02MjEzO5RCn/jDNH7DP3S1lJHWUljfOeRWJ45MzFs9ViBraM4XsOPVk1
j4zpqpJn+uLQEDVOtbiBu8Qlnh6cmhibOFs1n46rVseRqanJqap1lDH13E7eJmhhAkai9/FbcEmUx6khMJqLlwoZmxid5AmtrAxJ
ZLeyhMZSTv0UbRWZDV15KovwPIF8pMonUFRcKjInw+yfnrueSka1b3BlZaJvWzFwPrW2nsQagcUGV4bSq6u0XMtoK7QPQ3aDX/25
tYWU8wR/f8fZmWJniWMxGap8OtvHEMFTQUXER7EjpN9Enjh1zJs5ZgdVfJE+l96OxDugU/3JVqnwoDrVn2L/UqXiJy6L/TMIhWhT
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLTabGUI
"""--------------------------------------------------------------------
MODULE
    FDLTabGUI - lay's out the DataLoader GUI with Tabs

DESCRIPTION
    This script creates the DataLoader GUI using FAUX. It takes the
    required input from GUI and passes it on to the controller for
    further action

#StartInsQueryDialog
#ShowProviderData

VERSION: 5.0.6
--------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLUIElements
"""--------------------------------------------------------------------
MODULE
    FDLUIElements - lay's out the DataLoader GUI

DESCRIPTION
    This script creates the DataLoader GUI using FAUX. It takes the
    required input from GUI and passes it on to the controller for
    further action

#StartInsQueryDialog
#ShowProviderData

VERSION: 5.0.6
--------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLXSLObjects
""" --------------------------------------------------------------------------
MODULE
    FDLXSLObjects - defines XSL objects

DESCRIPTION
    This module defines all the DataLoader XSL files as python variables.
    Going forward this may change. Currently this is implemented because it
    is not possible to encrypt XSL objects using cmake.

VERSION: 5.0.6
---------------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
wl5oOkaK5NSCtE+RaE3iQI2b1a6mcDTKO7tewmahcCFuJWgu9xxMxhC02832kyNIoR47MUrqME16yeBDEsP7+mwYjd7vemnGpmy7
YWr7LFM+TvGARyWQ1xqV5nGrHgBBqMa0Yz4XvphU8TK/enwj42XWWCNtpXV2blq+yUtLN3n12SZXkWxycx0RViS4zZqi8XsTY5Vl
rDNFW3n+z1CWup+hLHVOIYbcP27Dr27Dr27Dr27Dr27Dr27Dr27Dr27Dr27Dr27Dr27Dr27Dr27Dr27Dr27Dr76X4VdLRGDdBmHd
BmHdBmHdBmHdBmHdBmHdBmHdBmHdBmHdBmEZg7CM+etdw31QnNZnuQK1CgczEVtGrqAo5WGFPpjKgJTlhsakww/OkdP/z97b9TaW
ZAli6+npD2l2pqd7dnbGmN3FbaXQTOUoxarqnlmgSpVbFHmVyU6KZF2SmSnZi4sr8irFSYpU8SMzVTMN7KvhNxuGDSy8NtYf64UN
rP+DAf8BwzBQ8Iuf/GI/LNbwk2E7TkTcuPF9416SSimLtTudmZfxceLEiRPnnDgfbjFIOSJRnLdtE85218PZPjBu1Ii3woDgMCSc
OZz4Oi93qPiIExjUGDC33DRT3QTTlQxNKiwogyfX2nKD40AjaWR6Ky7JzHCMizRycqsuz4JxVJc0+ooZsW6KXOzYPkkajCTNwUsI
K+f4NPbQ4Uxjn0jDfMvEJ+rEKRZQZxCn2O9OJZzoiFjxJwyTjcI7uySxktXJaBQhDcgTa62RFp1uUH/uZ5XTEtZAWKHYkY7zWdZA
ynLToT5zrqXDr19ea3R9vdaVZkNn3Ytj+NEK4PpQqFbv0VTgc62klS/olrvtMoJuMa+wBd1aGggXiSUu1/I7x9Uz4nJtg0jsNSsu
N23kGpe7xqBcDuL8UatSYR+zcp+0kkMel5p9JVG7S0GwZNTuUnOvKGo3hWHFUbtu0LvH7XKFubZsgiW/zyqDyA/pUvHC+YryOhbZ
2iKCyiaU916F8hoDeeWKcxqSJiiixeKKOl+SsVjQLld87l5E6ypeARm5IjYhvJsQ3qWCZO9mBOwm6tUUNfr9iXtdqvCmQTI3Mlpt
7cwVlc60Vc6UdYvsC5ornJlZ5NzlhjAXzVx9zUwXJp+zYGaKQJeKmUW4LDMGbgKuNwHXH2PAtSbc+l//vTsVbo0E8tVHUX+IuoP4
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
WQQ3C1bz5DL311tWhcUQB6iUZejDARWvWnEFNMiw1js5OQ17SIYPGqf15tMc/jtHR09D0ygZ8U8iKI1WpZZjXtw81wQpYGHOueSe
uaZtB60XddQ/x3ysi3ki3WaC8hX0Tvxmt9OtdHudDLoULXNM7gyPG5WcW9fr5Foebp5rgmarWz9OXiJP/Fq9kmM6Tef8k5+GDf+F
38g7bdIt14Sdk24b+5rkwirfK/fuhf5Jpd7IuYe0U87TILut5TkWWpc3eWpReZSmV59Hc8yve1vNvfYiEy87aeeDzMr7TOXfZq5v
rqmpr2evnZPJi/2KTMn8dnNPKnr85pv21mbzO53KUz88ClrPczEmqWOuSceT+fDiJoyuzsN30+GcPQ26zKv2zTU14qNHrQ447efl
/HLPIrfN06DVa+e/bUi3XBNWTo4q6KSBiBMS7+Yc02o655ocBFc4b6i7cE3nBiRjoHzMyw/afrdXaYRoYSBb5+Jeamf9LWXcD3Sz
5WRdrEuuZVKp/aTe6YBkGyCENZ92ckxrGCC31M9GKKSAmEYocF9xLme57yu+b04u3g7pu3j6cpmLqev65wIh8L/u+Z1u2OydHKFh
jut+o9ZBoo5/XH+VAxLrMLkAOg5aJ3kPXton11TdVt6Jkh65pmmhS+FlUMcvZZ1c+wsKttw7HzLtAWJ5UJwxUi6wYF3cgAUEVNMI
+Tam3Q39V+16kAcRXKfck4H28twPg1xMTuqYb/97BVbIdSowWfVZpfnUzz0d7ZZrwledBuI0DT9sV7rPpBkFwyT6FF5H80uD/6k4
TtkK+hyeFsAu/HA3GXXfK/278MRXxm95W6kO6nwHdOon9UYlCCGUPSf7F7rmwl695jdBWkLsGvi0H/jNXGIXHEH9GPnEwNbLJpbe
am57OXg3tu0lQKUd0nlbkwnEbc3J3RpILmh20Iml9yJ2eMuHW+0Q+QUszoB5HGB85IXDMEo+nCDCeAY6aNhBhIIGLIAQ/Rj5pJ3c
gq6jZKvP59VshcC98TUZYiEF4RHxml7Xkrgru5ObUmgcxTWzlkVx6Pqvuq2j3/jVbrHnAq6/wY7nJExRk3deYjKPkROYaq/TRZhV
VDb1BVXQndJe5UflRxm7St1QDhAn2i/JSep0+Vgzdb9KowqrDSHUJASJtt7BvgJIVEccEymx9RZaDrnHPEv9oMy9dpoo/435otVA
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLXSLTransform
"""--------------------------------------------------------------------
MODULE
    FDLXSLTransform - Performs XSL transformation.

DESCRIPTION
    This module identifies the asset class to model. It performs XSL
    transformation on corresponding asset class .xsl file with input
    as XML reply file and generates a XML AMBA Message.

VERSION: 5.0.6
---------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
/h3ItXJzuTl9RlcNWSZf/oI0Jf0/XeLZwA==""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLBusinessProcess
"""-------------------------------------------------------------------
MODULE
    FDLBusinessProcess - Business Process Implementation for DataLoader.

DESCRIPTION
    This module has helper functions for creating, accessing and updating business
    processes.

VERSION: 5.0.6
----- ---------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
m7usHdZRM/9/AGX/U9c=""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  DataLoaderInstrumentUpload
"""DataLoaderInstrumentUpload"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
eNptVEtv4zYQJvX2I4/ubhcpkBbq9gH40t6LtqiRRFmjhh3EdoESKATZZGx5ZUmh6CAx5L1kr70WPdrH/pMe+gt07al/oacO6ecG
FcCZ4XBeHH3Dv9GTT4f1A6zsNRCKKI4QWXFMsOIa0Zg21qhG9V8x0Rle4CUiBjMWJnCLGtR8h4hNLWoDdyjuoJrzj4zdIuXzQATN
JKCM13BhxMGEDfBednNdwZms4DcgAjJ+hOaQea7lSGZaaEIfG0uczVb7uZ7rSmcuMf8GZAt0Wnyy1tqgvQbZAU91kmt8JkpUy/Ed
SmNRzrVHvKgskdw/4rmRG3xG9Q4S1UfE3ynpYHFIISNG1OxAL+A+Vouc1nvdtg/kdfu6QS58r+43Wp3uz1cXPrsner3Z7M4uexnj
Lk1Y5saJcEfBHXPFiLk8HI5E5orEDaZilPBwxtxdZ9wwzgSfTlgs3Gkagc6rHRWVQRLfhEOfhgNB7M60P2YgOI3sxzCm7ZtCDwYT
8ty7ZmA3CKMwEGESNwSbkIrX2AYkNsjdh5QVR97FvWA8DqL2KlR5Z1UY/SSJCh32hTlNU8aLrxvZrsL6pmp+lkzSJAaXK84yYI34
iic3YcQKK0qGQ8aJcdFsX9bMwoa6BLsX5CXcOfG3F/flbaEgYm+ESj/lfra+4IfZKJlG1H/f6Q/Eq4COfz/e1bSrvqd69lX6ULiQ
k4ayET7o+YOfiUCwXRhakjhzJfKwgw18DLSKy7CqsDuFZWALG1oZ80OwGewPigPL3kD1LwXVRzRHAo+1hU6xwAsDIAcj8RIt8Tn6
5dkcA2CtHC/sJZJguv1kbeOsYTkG3xL4gvyen6789K3fT2BXBjt9CXCFwTBzA+xO5lZuSSBT443G3+bW3ATb32/f5ib/M0dg8eXc
Bs8qeJq5LTPkpqQ3mszEFwBvq4NuF9SWA9ualaYSvN+5X9DZoRQveTJNV/tPB/DbWzC8sH31f7B4RSr1NI3CgULh7DPpvwaGiuAG
MXUHG+woVderHQDimOAGNJMce72dTzOM3xCrwyKJCEMeEL0dUsA8paSyZ0hKvU2l5ANP8f0QZW+L18KQUwBG6/PtQc0BhK5q70ds
L3ZGjqZPSipt+0KOh0+TVWm0DZqRF8GuH1LtJfy8ScrB1oQcsWAw2sunEL4iB5JIrJ5KsH2u8GoBPo8VTk/W3FHUUtIpLOVRK6l+
Fs+88+aZekE6YTyMmEjiogS6pppSXpY9f7F+Yu4CHvYDuLGf9Mdk+/DAf+bycVazoILvlbits3C+nSR0GrHv5cOeSVsHinG0qqLO
8/8AxqzbPg==""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLInstrumentValidation_template
"""-------------------------------------------------------------------
MODULE
    FDLInstrumentValidation_template - A template for DataLoader instrument validation extension

DESCRIPTION
    This module is provided as an example.
    If users want to write a validation extension then they need to rename this module to 'FDLInstrumentValidation' and write their validation logic in below function.
    Function 'validate_instrument' is called by DataLoader, so the name of the function must not be changed.
    Function 'validate_instrument' should accept an acm object of instrument as input.
    Function 'validate_instrument' must return
    1. Any one of following actions depending on validation result:
        a. Set_Incomplete - This will mean that validation has failed and instrument needs to be set to incomplete. DataLoader will then set the instrument as incomplete
        b. Set_Complete - This will mean that validation was successful and instrument can be set as complete. DataLoader will then set the instrument's incomplete status as None
        c. No_Action - This will mean that after validation there needs to be no change done to the instrument. DataLoader will then keep the instrument's status as it was before the validation extension was processed.
    2. Validation error message. If there is no validation error then an empty string must be returned.

VERSION: 5.0.6
----- ---------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
eNqlVc1qGzEQ3nXcvz0VSn+OAyWYQLPQHkMpDXEChtQpcZqDL4u8mrW33ZUWSRvXkNz6Mn2BPoxvpW/RU0fyer1xHZoSwQpJHs33
zTej8S9vbbToe0+ffkwT94Ye93nrmzf0+dbA22n//HHP83bvPoIPJ91Px4cB0DjqHveENqrMUZhzlqWcmVSKyGBeZMwg7MI+1JtE
Kugyw44l46ggrW/CRX0V8KtBoWkVBN3DwcFp7+NZ76Tv0M4mqYZc8jJDoFWh5EXKkQPTwOxFRjgYOtNeAqVGpWHKyL2RMFUpMWAb
kcBM0E0zEEj+yFyhYDnS2QqRTjs3xNshfF5BkJtUNWEyOU5jChZGmMkpJKWI7fmC51G1g051A6OVLB0bZcyyjDiNZg3pXoGWFggc
SZm49dIx5KU2IKQhQIgnTIyR3wpMT2SZkZpxjIWxirI4Bzn6jLGxGI10keCpKEpzK7eOjkJTKuHMX4ewL2YghWOeyIxUScWY0KwT
DRwLFNyekMuGjgp1mZk958MOFsIATdQTsbR5d8XmKmSaZhnkyGxK2bXamhDxhKVWT5uwRkQ279qmmDTT6ComrR2Hzap13l3BODsS
fl2Y5bWa6WjB9ODWPKfkR5eUB62TMlvnGjOxpEl2/02y0+QI2jBTauuoTxmpKcch7aP9RV4382WJwWuFTjAKrykpZFWAwG26jVyj
cgPnL4jF36RXTFPjFBohNRT34Da/amtDPcKquHwBb0I4b5gqRR0pp9/ZmPTrJVUIFCsxv1g3dNxso8kLMyM6ytaoq24KdVHgFic4
PzwdUMvag+3T7cC1TLhjy439Rpvfqlr9Qd3q/Stq9FetS/+ylbSo1W/1h4/q7M2973QyDFZaDp8vnlrkMhit4hy+WK0jF3NUiaMs
qJt+v/xXzw+L2fzJhk7wzPK9byPw2367rejfyOvvtOYPoojLOIrcwQpoMbVpmj98u2jB76wM2sbefvoH7SU5IA==""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLDataValidation
"""-------------------------------------------------------------------
MODULE
    FDLDataValidation - Data validation for entities uploaded via DataLoader

DESCRIPTION
    Validates the data commited in database. This hook gets called when an instrument gets inserted in database

VERSION: 5.0.6
--------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

  FDLHooks
"""----------------------------------------------------------------------------
MODULE
    FDLHooks

DESCRIPTION
    This is a customizable hook where user can add there own logic.

FUNCTIONS
    defaultExpiryTime(message, dl_textobject_data_dict):
        Returns the Option expiry time

(c) Copyright FIS. All rights reserved.
----------------------------------------------------------------------------"""
import FDLLogger
logger = FDLLogger.FDLLogger(name='DataLoader')

def defaultExpiryTime(message, DataSourceDictionary={}):
    logger.DLOG("Within hook defaultExpiryTime")
    exp_time = None
    """
    Add user logic to define expiry time in case of OPTION and FUTURE
    Input : DataLoader AMBA message, DataSourceDictionary (data source reply file data in form of python dictionary)
    Output : returns expiry time

    Example:
    mb_instrument = message.mbf_find_object('INSTRUMENT', 'MBFE_BEGINNING')
    pay_type = mb_instrument.mbf_find_object('PAYTYPE', 'MBFE_BEGINNING')
    if pay_type.mbf_get_value().lower() == 'spot':
        exp_time = "17:30:00"
    """

    return exp_time

def update_trade_data(trade, trade_new_ins, trade_default_ins):
    logger.DLOG("Within hook update_trade_data")
    """
    This hook is a part of TradeComplementor. User can update the trade data with the
    data from its instrument being loaded via DataLoader.
    Input:
        trade : ACM trade object
        trade_new_ins = ACM Instrument object uploaded via DataLoader and linked to trade
        trade_default_ins = Default instrument ACM object on which the trade was initially created.

    """

    return trade

def dl_amb_request_export_hook(request_message):
    logger.DLOG("Within hook dl_amb_request_export_hook")
    """
    DataLoader sends the user requested message to AMB. DataLoader ATS picks up this request message from AMB and process
    it further for requesting user data from data source. This is hook is provided for updating the AMB request message
    that is to be send over AMB. User cannot add new tags to this message but can update the tag values.
    Input:
        request_message : Input DataLoader request AMB message
    """
    return request_message

def external_instrument_source(instr_keys, message):
    logger.DLOG("Within hook external_instrument_source")
    """User should add his logic here to check if the missing instrument with identifier specified as input
    instr_keys exists in his database or any external source. User can also update the input trade mb message.
    The API should return the instrument and updated mb message if found from external source.
    """
    instrument = None

    return instrument, message

def handle_calendar_date_updates(calendar, date, aspect, user):
    logger.DLOG("Within user hook handle_calendar_date_updates")
    """DataLoader invokes this hook on update of any calendar date. User can do the required operation like updating the historical,
    future cashflows for instruments for the  updated date. User has to write his own logic in this hook.
    Inputs:
    calendar - ACM FCalenar object
    date - ACM date
    aspect - insert (for new date inserting in database) or remove (for existing date removed from database)
    user - ACM FUser name as string
    """
    pass

def get_overriden_underlying_Load(load_lst):
    """This is an override API for customizing the underlying load for complimentor, Users can write their logic to return the load type"""
    logger.DLOG("Within get_overriden_underlying_Load Hook to override the underlying load")
    underlying_load_lst = []
    
        
    return  underlying_load_lst 

def get_bval_tier_override(): 
    """ This API returns the BVAL tier and snapshot value for requesting the BVAL Prices from Bloomberg. If None is returned from here
        then default value will be taken i.e. bvaltier=1 and bvalshapshot = lo12pm   
        Possible values for bvaltier
        bvaltier='1'
        bvaltier='2'
        Possible value for "bvalsnapshot"
        bvalsnapshot="ny4pm"
        bvalsnapshot="lo4pm"
        bvalsnapshot="to4pm"
        bvalsnapshot="ny3pm"
        bvalsnapshot="lo3pm"
        bvalsnapshot="to3pm"
        bvalsnapshot="lo12pm"
        bvalsnapshot="to5pm"
        bvalsnapshot="sy5pm"
        
    """
    bvaltier='1'
    bvalsnapshot='lo12pm'    
    
    return bvaltier,bvalsnapshot
    
    
...

  FDLUtils
"""--------------------------------------------------------------------
MODULE
    FDLUtils - Module to provide various validation of security based on their type

DESCRIPTION
    This file provides API to check weather the security provied by the user is valid or not.

VERSION: 5.0.6
--------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == b'a\r\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec (__pyc)
del __pyc
...

}

